	MOUTH_CLOSED_NEUTRAL(new Symbol(4, 4, 1, 1, 2, 1, 14, 2), Arrays.asList(new Integer[] { 2 }),
	MOUTH_CLOSED_FORWARD(new Symbol(4, 4, 1, 2, 2, 1, 22, 9), Arrays.asList(new Integer[] { 2 }),
	MOUTH_CLOSED_CONTACT(new Symbol(4, 4, 1, 3, 2, 1, 18, 11), Arrays.asList(new Integer[] { 2 }),
	MOUTH_SMILE(new Symbol(4, 4, 2, 1, 2, 1, 15, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_SMILE_WRINKLED(new Symbol(4, 4, 2, 2, 2, 1, 21, 8), Arrays.asList(new Integer[] { 2 }),
	MOUTH_SMILE_OPEN(new Symbol(4, 4, 2, 3, 2, 1, 15, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_FROWN(new Symbol(4, 4, 3, 1, 2, 1, 15, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_FROWN_WRINKLED(new Symbol(4, 4, 3, 2, 2, 1, 21, 7), Arrays.asList(new Integer[] { 2 }),
	MOUTH_FROWN_OPEN(new Symbol(4, 4, 3, 3, 2, 1, 15, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_CIRCLE(new Symbol(4, 4, 4, 1, 2, 1, 9, 8), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_FORWARD(new Symbol(4, 4, 4, 2, 2, 1, 21, 10), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_WRINKLED(new Symbol(4, 4, 4, 3, 2, 1, 13, 14), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_OVAL(new Symbol(4, 4, 5, 1, 2, 1, 14, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_OVAL_WRINKLED(new Symbol(4, 4, 5, 2, 2, 1, 23, 7), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_OVAL_YAWN(new Symbol(4, 4, 5, 3, 2, 1, 6, 12), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_RECTANGLE(new Symbol(4, 4, 6, 1, 2, 1, 10, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_RECTANGLE_WRINKLED(new Symbol(4, 4, 6, 2, 2, 1, 16, 12), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_RECTANGLE_YAWN(new Symbol(4, 4, 6, 3, 2, 1, 6, 10), Arrays.asList(new Integer[] { 2 }),
	MOUTH_KISS(new Symbol(4, 4, 7, 1, 2, 1, 5, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_KISS_FORWARD(new Symbol(4, 4, 7, 2, 2, 1, 19, 10), Arrays.asList(new Integer[] { 2 }),
	MOUTH_KISS_WRINKLED(new Symbol(4, 4, 7, 3, 2, 1, 11, 11), Arrays.asList(new Integer[] { 2 }),
	MOUTH_TENSE(new Symbol(4, 4, 8, 1, 2, 1, 11, 5), Arrays.asList(new Integer[] { 2 }),
	MOUTH_TENSE_FORWARD(new Symbol(4, 4, 8, 2, 2, 1, 23, 10), Arrays.asList(new Integer[] { 2 }),
	MOUTH_TENSE_SUCKED(new Symbol(4, 4, 8, 3, 2, 1, 23, 10), Arrays.asList(new Integer[] { 2 }),
	LIPS_PRESSED_TOGETHER(new Symbol(4, 4, 9, 1, 2, 1, 13, 7), Arrays.asList(new Integer[] { 2 }),
	LIP_LOWER_OVER_UPPER(new Symbol(4, 4, 9, 2, 2, 1, 14, 4), Arrays.asList(new Integer[] { 2 }),
	LIP_UPPER_OVER_LOWER(new Symbol(4, 4, 9, 3, 2, 1, 14, 4), Arrays.asList(new Integer[] { 2 }),
	MOUTH_CORNERS(new Symbol(4, 4, 10, 1, 4, 1, 23, 6), Arrays.asList(new Integer[] { 4, 5, 6 }),
	MOUTH_WRINKLES_SINGLE(new Symbol(4, 4, 11, 1, 4, 1, 20, 7), Arrays.asList(new Integer[] { 4, 5, 6 }),
	MOUTH_WRINKLES_DOUBLE(new Symbol(4, 4, 11, 2, 4, 1, 24, 7), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TONGUE_STICKS_OUT_FAR(new Symbol(4, 5, 1, 1, 2, 1, 10, 13), Arrays.asList(new Integer[] { 2 }),
	TONGUE_LICKS_LIPS(new Symbol(4, 5, 1, 2, 2, 1, 14, 6), Arrays.asList(new Integer[] { 2 }),
	TONGUE_TIP_BETWEEN_LIPS(new Symbol(4, 5, 1, 3, 2, 1, 16, 6), Arrays.asList(new Integer[] { 2 }),
	TONGUE_TIP_TOUCHES_INSIDE_MOUTH(new Symbol(4, 5, 1, 4, 2, 1, 10, 10), Arrays.asList(new Integer[] { 2 }),
	TONGUE_INSIDE_MOUTH_RELAXED(new Symbol(4, 5, 1, 5, 2, 1, 10, 10), Arrays.asList(new Integer[] { 2 }),
	TONGUE_CENTER_STICKS_OUT(new Symbol(4, 5, 3, 1, 4, 1, 10, 10), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TONGUE_CENTER_INSIDE_MOUTH(new Symbol(4, 5, 4, 1, 3, 1, 10, 10), Arrays.asList(new Integer[] { 3, 4 }),
	TEETH(new Symbol(4, 5, 5, 1, 2, 1, 15, 8), Arrays.asList(new Integer[] { 2, 3, 4, 5, 6 }),
	TEETH_MOVEMENT(new Symbol(4, 5, 5, 2, 4, 1, 27, 12), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TEETH_ON_TONGUE(new Symbol(4, 5, 6, 1, 3, 1, 15, 10), Arrays.asList(new Integer[] { 3, 4, 5, 6 }),
	TEETH_ON_TONGUE_MOVEMENT(new Symbol(4, 5, 6, 2, 4, 1, 25, 15), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TEETH_ON_LIPS(new Symbol(4, 5, 7, 1, 3, 1, 10, 6), Arrays.asList(new Integer[] { 3, 4, 5, 6 }),
	TEETH_ON_LIPS_MOVEMENT(new Symbol(4, 5, 7, 2, 4, 1, 24, 11), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TEETH_BITE_LIPS(new Symbol(4, 5, 8, 1, 4, 1, 15, 8), Arrays.asList(new Integer[] { 4, 5, 6 }),
	AIR_BLOWING_OUT(new Symbol(4, 3, 5, 1, 4, 1, 48, 22), Arrays.asList(new Integer[] { 4, 5, 6 }),
	AIR_SUCKING_IN(new Symbol(4, 3, 5, 2, 4, 1, 48, 22), Arrays.asList(new Integer[] { 4, 5, 6 }),
	JAW_MOVEMENT_WALL_PLANE(new Symbol(4, 5, 9, 1, 2, 1, 8, 9), Arrays.asList(new Integer[] { 2, 3 }),
	JAW_MOVEMENT_FLOOR_PLANE(new Symbol(4, 5, 10, 1, 2, 1, 7, 9), Arrays.asList(new Integer[] { 2, 3 }),
	JAW_PART_HEAD_RIM(new Symbol(4, 99, 999, 96, 1, 1, 14, 4), Arrays.asList(new Integer[] { 1 }),
	CHEEKS_PUFFED(new Symbol(4, 3, 1, 1, 4, 1, 9, 15), Arrays.asList(new Integer[] { 4, 5 }),
	CHEEKS_NEUTRAL(new Symbol(4, 3, 1, 2, 4, 1, 9, 16), Arrays.asList(new Integer[] { 4, 5 }),
	CHEEKS_SUCKED(new Symbol(4, 3, 1, 3, 4, 1, 12, 10), Arrays.asList(new Integer[] { 4, 5 }),
	TENSE_CHEEKS_HIGH(new Symbol(4, 3, 2, 1, 4, 1, 11, 5), Arrays.asList(new Integer[] { 4 }),
	TENSE_CHEEKS_MIDDLE(new Symbol(4, 3, 2, 2, 4, 1, 11, 5), Arrays.asList(new Integer[] { 4 }),
	TENSE_CHEEKS_LOW(new Symbol(4, 3, 2, 3, 4, 1, 11, 5), Arrays.asList(new Integer[] { 4 }),
	NECK(new Symbol(4, 5, 11, 1, 2, 1, 20, 13), Arrays.asList(new Integer[] { 2, 3, 4, 5, 6 }),
	EYEBROWS_STRAIGHT_UP(new Symbol(4, 2, 1, 1, 4, 1, 23, 10), Arrays.asList(new Integer[] { 4, 5, 6 }),
	EYEBROWS_STRAIGHT_NEUTRAL(new Symbol(4, 2, 1, 2, 4, 1, 22, 6), Arrays.asList(new Integer[] { 4, 5, 6 }),
	EYEBROWS_STRAIGHT_DOWN(new Symbol(4, 2, 1, 3, 4, 1, 22, 10), Arrays.asList(new Integer[] { 4, 5, 6 }),
	DREAMY_EYEBROWS_NEUTRAL_DOWN(new Symbol(4, 2, 2, 1, 4, 1, 26, 9), Arrays.asList(new Integer[] { 4, 5, 6 }),
	DREAMY_EYEBROWS_DOWN_NEUTRAL(new Symbol(4, 2, 2, 2, 4, 1, 24, 8), Arrays.asList(new Integer[] { 4, 5, 6 }),
	DREAMY_EYEBROWS_UP_NEUTRAL(new Symbol(4, 2, 2, 3, 4, 1, 24, 8), Arrays.asList(new Integer[] { 4, 5, 6 }),
	DREAMY_EYEBROWS_NEUTRAL_UP(new Symbol(4, 2, 2, 4, 4, 1, 24, 8), Arrays.asList(new Integer[] { 4, 5, 6 }),
	FOREHEAD_NEUTRAL(new Symbol(4, 2, 3, 1, 2, 1, 12, 2), Arrays.asList(new Integer[] { 2 }),
	FOREHEAD_CONTACT(new Symbol(4, 2, 3, 2, 2, 1, 20, 11), Arrays.asList(new Integer[] { 2 }),
	FOREHEAD_WRINKLED(new Symbol(4, 2, 3, 3, 2, 1, 16, 6), Arrays.asList(new Integer[] { 2 }),
	EYES_OPEN(new Symbol(4, 2, 4, 1, 4, 1, 21, 4), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_SQUEEZED(new Symbol(4, 2, 4, 2, 4, 1, 21, 2), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_CLOSED(new Symbol(4, 2, 4, 3, 4, 1, 21, 4), Arrays.asList(new Integer[] { 4, 5 }),
	EYE_BLINK_SINGLE(new Symbol(4, 2, 4, 4, 4, 1, 11, 4), Arrays.asList(new Integer[] { 4, 5 }),
	EYE_BLINKS_MULTIPLE(new Symbol(4, 2, 4, 5, 4, 1, 9, 4), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_HALF_OPEN(new Symbol(4, 2, 5, 1, 4, 1, 22, 6), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_WIDE_OPEN(new Symbol(4, 2, 5, 2, 4, 1, 22, 8), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_HALF_CLOSED(new Symbol(4, 2, 5, 3, 4, 1, 22, 6), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_WIDENING_MOVEMENT(new Symbol(4, 2, 5, 4, 4, 1, 21, 10), Arrays.asList(new Integer[] { 4, 5 }),
	EYE_WINK_SQUEEZED_EYE_BLINK(new Symbol(4, 2, 5, 5, 4, 1, 26, 9), Arrays.asList(new Integer[] { 4, 5 }),
	EYELASHES_UP(new Symbol(4, 2, 6, 1, 4, 1, 24, 9), Arrays.asList(new Integer[] { 4, 5 }),
	EYELASHES_DOWN(new Symbol(4, 2, 6, 2, 4, 1, 24, 9), Arrays.asList(new Integer[] { 4, 5 }),
	EYELASHES_FLUTTERING(new Symbol(4, 2, 6, 3, 4, 1, 24, 13), Arrays.asList(new Integer[] { 4, 5 }),
	EYEGAZE_STRAIGHT_WALL_PLANE(new Symbol(4, 2, 7, 1, 2, 1, 20, 9), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_WALL_DOUBLE(new Symbol(4, 2, 7, 2, 2, 1, 28, 7), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_WALL_ALTERNATE(new Symbol(4, 2, 7, 3, 2, 1, 28, 8), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_FLOOR_PLANE(new Symbol(4, 2, 8, 1, 2, 1, 18, 9), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_FLOOR_DOUBLE(new Symbol(4, 2, 8, 2, 2, 1, 28, 7), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_FLOOR_ALTERNATE(new Symbol(4, 2, 8, 3, 2, 1, 22, 9), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_CURVED_WALL_PLANE(new Symbol(4, 2, 9, 1, 2, 1, 25, 6), Arrays.asList(new Integer[] { 2, 3 }),
	EYEGAZE_CURVED_FLOOR_PLANE(new Symbol(4, 2, 10, 1, 2, 1, 22, 6), Arrays.asList(new Integer[] { 2, 3 }),
	EYEGAZE_CIRCLES_WALL_PLANE(new Symbol(4, 2, 11, 1, 2, 1, 25, 10), Arrays.asList(new Integer[] { 2, 3 }),
	EXCITEMENT(new Symbol(4, 5, 13, 1, 2, 1, 47, 47), Arrays.asList(new Integer[] { 2, 3, 4 }),
	NOSE_NEUTRAL(new Symbol(4, 3, 4, 1, 2, 1, 2, 12), Arrays.asList(new Integer[] { 2 }),
	NOSE_CONTACT(new Symbol(4, 3, 4, 2, 2, 1, 10, 13), Arrays.asList(new Integer[] { 2 }),
	NOSE_WRINKLES(new Symbol(4, 3, 4, 3, 2, 1, 8, 12), Arrays.asList(new Integer[] { 2 }),
	NOSE_WIGGLES(new Symbol(4, 3, 4, 4, 2, 1, 14, 13), Arrays.asList(new Integer[] { 2 }),
	HAIR(new Symbol(4, 5, 12, 1, 2, 1, 36, 36), Arrays.asList(new Integer[] { 2, 3, 4 }),
	STANDARD(new Symbol(4, 1, 1, 1, 1, 1, 36, 35), Arrays.asList(new Integer[] { 1 }),
	HEAD_RIMS(new Symbol(4, 1, 2, 1, 1, 1, 36, 35), Arrays.asList(new Integer[] { 1 }),
	HEAD_MOVEMENT_STRAIGHT_WALL_PLANE(new Symbol(4, 1, 3, 1, 1, 1, 36, 46),
	HEAD_MOVEMENT_TILTS_WALL_PLANE(new Symbol(4, 1, 4, 1, 1, 1, 36, 45), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	HEAD_MOVEMENT_STRAIGHT_FLOOR_PLANE(new Symbol(4, 1, 5, 1, 1, 1, 36, 46),
	HEAD_MOVEMENT_CURVES_WALL_PLANE(new Symbol(4, 1, 6, 1, 1, 1, 36, 44), Arrays.asList(new Integer[] { 1 }),
	HEAD_MOVEMENT_CURVES_FLOOR_PLANE(new Symbol(4, 1, 7, 1, 1, 1, 36, 42), Arrays.asList(new Integer[] { 1 }),
	HEAD_MOVEMENT_CIRCLES(new Symbol(4, 1, 8, 1, 1, 1, 36, 38), Arrays.asList(new Integer[] { 1 }),
	FACE_DIRECTION_POSITIONS_NOSE_FORWARD_TILTING(new Symbol(4, 1, 9, 1, 1, 1, 36, 35),
	FACE_DIRECTION_POSITIONS_NOSE_UP_OR_DOWN(new Symbol(4, 1, 10, 1, 1, 1, 36, 44), Arrays.asList(new Integer[] { 1 }),
	FACE_DIRECTION_POSITIONS_NOSE_UP_OR_DOWN_TILTING(new Symbol(4, 1, 10, 2, 1, 1, 36, 43),
	TONGUE_MOVES_AGAINST_CHEEK_CHEEK_ITSELF(new Symbol(4, 5, 2, 1, 1, 1, 39, 35), Arrays.asList(new Integer[] { 1, 2 }),
	EARS(new Symbol(4, 3, 3, 1, 1, 1, 48, 35), Arrays.asList(new Integer[] { 4, 5 }),
	LOCATION_SPACE_WALL_PLANE(new Symbol(6, 1, 1, 1, 1, 1, 41, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOCATION_SPACE_FLOOR_PLANE(new Symbol(6, 1, 1, 2, 1, 1, 41, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOCATION_HEIGHT(new Symbol(6, 1, 2, 1, 1, 1, 43, 39), Arrays.asList(new Integer[] { 1, 2 }),
	LOCATION_WIDTH(new Symbol(6, 1, 3, 1, 1, 1, 28, 43), Arrays.asList(new Integer[] { 1 }),
	LOCATION_DEPTH(new Symbol(6, 1, 4, 1, 1, 1, 43, 21), Arrays.asList(new Integer[] { 1 }),
	LOCATION_HEAD_NECK(new Symbol(6, 1, 5, 1, 1, 1, 36, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	LOCATION_TORSO(new Symbol(6, 1, 6, 1, 1, 1, 27, 48), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	LOCATION_LIMBS_DIGITS(new Symbol(6, 1, 7, 1, 1, 1, 27, 37), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	FAST(new Symbol(3, 1, 1, 1, 1, 1, 12, 7), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	SLOW(new Symbol(3, 1, 2, 1, 1, 1, 38, 11), Arrays.asList(new Integer[] { 1 }),
	TENSE(new Symbol(3, 1, 3, 1, 1, 1, 11, 5), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	RELAXED(new Symbol(3, 1, 3, 2, 1, 1, 11, 7), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	SAME_TIME(new Symbol(3, 1, 4, 1, 1, 1, 15, 6), Arrays.asList(new Integer[] { 1 }),
	SAME_TIME_ALTERNATING(new Symbol(3, 1, 4, 2, 1, 1, 15, 11), Arrays.asList(new Integer[] { 1 }),
	EVERY_OTHER_TIME(new Symbol(3, 1, 4, 3, 1, 1, 23, 6), Arrays.asList(new Integer[] { 1 }),
	GRADUAL(new Symbol(3, 1, 4, 4, 1, 1, 15, 14), Arrays.asList(new Integer[] { 1 }),
	TOUCH_SINGLE(new Symbol(2, 1, 1, 1, 1, 1, 10, 11), Arrays.asList(new Integer[] { 1 }),
	TOUCH_MULTIPE(new Symbol(2, 1, 2, 1, 1, 1, 22, 11), Arrays.asList(new Integer[] { 1, 2 }),
	TOUCH_BETWEEN(new Symbol(2, 1, 3, 1, 1, 1, 18, 15), Arrays.asList(new Integer[] { 1, 2 }),
	GRASP_SINGLE(new Symbol(2, 1, 4, 1, 1, 1, 10, 10), Arrays.asList(new Integer[] { 1 }),
	GRASP_MULTIPLE(new Symbol(2, 1, 5, 1, 1, 1, 22, 10), Arrays.asList(new Integer[] { 1, 2 }),
	GRASP_BETWEEN(new Symbol(2, 1, 6, 1, 1, 1, 18, 15), Arrays.asList(new Integer[] { 1, 2 }),
	STRIKE_SINGLE(new Symbol(2, 1, 7, 1, 1, 1, 13, 13), Arrays.asList(new Integer[] { 1 }),
	STRIKE_MULTIPLE(new Symbol(2, 1, 8, 1, 1, 1, 28, 13), Arrays.asList(new Integer[] { 1, 2 }),
	STRIKE_BETWEEN(new Symbol(2, 1, 9, 1, 1, 1, 21, 15), Arrays.asList(new Integer[] { 1, 2 }),
	BRUSH_SINGLE(new Symbol(2, 1, 10, 1, 1, 1, 12, 12), Arrays.asList(new Integer[] { 1 }),
	BRUSH_MULTIPLE(new Symbol(2, 1, 11, 1, 1, 1, 26, 12), Arrays.asList(new Integer[] { 1, 2 }),
	BRUSH_BETWEEN(new Symbol(2, 1, 12, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2 }),
	RUB_SINGLE(new Symbol(2, 1, 13, 1, 1, 1, 13, 14), Arrays.asList(new Integer[] { 1 }),
	RUB_MULTIPLE(new Symbol(2, 1, 14, 1, 1, 1, 28, 14), Arrays.asList(new Integer[] { 1, 2 }),
	RUB_BETWEEN(new Symbol(2, 1, 15, 1, 1, 1, 21, 16), Arrays.asList(new Integer[] { 1, 2 }),
	SURFACE_SYMBOLS(new Symbol(2, 1, 16, 1, 1, 1, 15, 5), Arrays.asList(new Integer[] { 1, 2 }),
	SURFACE_BETWEEN(new Symbol(2, 1, 17, 1, 1, 1, 16, 9), Arrays.asList(new Integer[] { 1, 2 }),
	SQUEEZE_LARGE_SINGLE(new Symbol(2, 2, 1, 1, 1, 1, 8, 8), Arrays.asList(new Integer[] { 1 }),
	SQUEEZE_SMALL_SINGLE(new Symbol(2, 2, 1, 2, 1, 1, 6, 6), Arrays.asList(new Integer[] { 1 }),
	SQUEEZE_LARGE_MULTIPLE(new Symbol(2, 2, 2, 1, 1, 1, 18, 8), Arrays.asList(new Integer[] { 1, 2 }),
	SQUEEZE_SMALL_MULTIPLE(new Symbol(2, 2, 2, 2, 1, 1, 14, 6), Arrays.asList(new Integer[] { 1, 2 }),
	SQUEEZE_SEQUENTIAL(new Symbol(2, 2, 3, 1, 1, 1, 12, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	FLICK_LARGE_SINGLE(new Symbol(2, 2, 4, 1, 1, 1, 8, 8), Arrays.asList(new Integer[] { 1 }),
	FLICK_SMALL_SINGLE(new Symbol(2, 2, 4, 2, 1, 1, 6, 6), Arrays.asList(new Integer[] { 1 }),
	FLICK_LARGE_MULTIPLE(new Symbol(2, 2, 5, 1, 1, 1, 18, 8), Arrays.asList(new Integer[] { 1, 2 }),
	FLICK_SMALL_MULTIPLE(new Symbol(2, 2, 5, 2, 1, 1, 14, 6), Arrays.asList(new Integer[] { 1, 2 }),
	FLICK_SEQUENTIAL(new Symbol(2, 2, 6, 1, 1, 1, 12, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	SQUEEZE_FLICK_ALTERNATING(new Symbol(2, 2, 7, 1, 1, 1, 34, 11), Arrays.asList(new Integer[] { 1, 2 }),
	HINGE_MOVEMENT_UP_DOWN_LARGE(new Symbol(2, 2, 8, 1, 1, 1, 12, 7), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	HINGE_MOVEMENT_UP_DOWN_SMALL(new Symbol(2, 2, 8, 2, 1, 1, 10, 5), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	HINGE_MOVEMENT_UP_SEQUENTIAL(new Symbol(2, 2, 9, 1, 1, 1, 20, 35),
	HINGE_MOVEMENT_DOWN_SEQUENTIAL(new Symbol(2, 2, 9, 2, 1, 1, 20, 35),
	HINGE_MOVEMENT_UP_DOWN_ALTERNATING_LARGE(new Symbol(2, 2, 10, 1, 1, 1, 12, 13),
	HINGE_MOVEMENT_UP_DOWN_ALTERNATING_SMALL(new Symbol(2, 2, 10, 2, 1, 1, 10, 9),
	HINGE_MOVEMENT_SIDE_TO_SIDE_SCISSORS(new Symbol(2, 2, 11, 1, 1, 1, 16, 9),
	FINGER_CONTACT_MOVEMENT_WALL_PLANE(new Symbol(2, 2, 12, 1, 1, 1, 10, 10),
	FINGER_CONTACT_MOVEMENT_FLOOR_PLANE(new Symbol(2, 2, 13, 1, 1, 1, 10, 10),
	SINGLE_STRAIGHT_MOVEMENT_WALL_PLANE_SMALL(new Symbol(2, 3, 1, 1, 1, 1, 13, 15),
	SINGLE_STRAIGHT_MOVEMENT_WALL_PLANE_MEDIUM(new Symbol(2, 3, 1, 2, 1, 1, 16, 30),
	SINGLE_STRAIGHT_MOVEMENT_WALL_PLANE_LARGE(new Symbol(2, 3, 1, 3, 1, 1, 16, 42),
	SINGLE_STRAIGHT_MOVEMENT_WALL_PLANE_LARGEST(new Symbol(2, 3, 1, 4, 1, 1, 16, 50),
	SINGLE_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 1, 5, 1, 1, 17, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DOUBLE_STRAIGHT_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 2, 1, 1, 1, 25, 14), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DOUBLE_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 2, 2, 1, 1, 25, 18), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DOUBLE_ALTERNATING_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 3, 1, 1, 1, 26, 17),
	DOUBLE_ALTERNATING_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 3, 2, 1, 1, 26, 20),
	CROSS_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 4, 1, 1, 1, 30, 26), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPPLE_STRAIGHT_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 5, 1, 1, 1, 37, 14), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPPLE_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 5, 2, 1, 1, 37, 18), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPPLE_ALTERNATING_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 6, 1, 1, 1, 39, 17),
	TRIPPLE_ALTERNATING_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 6, 2, 1, 1, 39, 21),
	BLEND_WALL_PLANE_SMALL(new Symbol(2, 3, 7, 1, 1, 1, 17, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BLEND_WALL_PLANE_MEDIUM(new Symbol(2, 3, 7, 2, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BLEND_WALL_PLANE_LARGE(new Symbol(2, 3, 7, 3, 1, 1, 26, 42), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_WALL_PLANE_SMALL(new Symbol(2, 3, 8, 1, 1, 1, 19, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_WALL_PLANE_MEDIUM(new Symbol(2, 3, 8, 2, 1, 1, 23, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_WALL_PLANE_LARGE(new Symbol(2, 3, 8, 3, 1, 1, 27, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_WALL_PLANE_WITH_ROTATION(new Symbol(2, 3, 8, 4, 1, 1, 30, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CHECK_WALL_PLANE_SMALL(new Symbol(2, 3, 9, 1, 1, 1, 21, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CHECK_WALL_PLANE_MEDIUM(new Symbol(2, 3, 9, 2, 1, 1, 26, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CHECK_WALL_PLANE_LARGE(new Symbol(2, 3, 9, 3, 1, 1, 28, 39), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_WALL_PLANE_SMALL(new Symbol(2, 3, 10, 1, 1, 1, 24, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_WALL_PLANE_MEDIUM(new Symbol(2, 3, 10, 2, 1, 1, 29, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_WALL_PLANE_LARGE(new Symbol(2, 3, 10, 3, 1, 1, 33, 33), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_WALL_PLANE_SMALL(new Symbol(2, 3, 11, 1, 1, 1, 18, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_WALL_PLANE_MEDIUM(new Symbol(2, 3, 11, 2, 1, 1, 24, 39), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_WALL_PLANE_LARGE(new Symbol(2, 3, 11, 3, 1, 1, 26, 43), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_WALL_PLANE_SMALL(new Symbol(2, 3, 12, 1, 1, 1, 16, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_WALL_PLANE_MEDIUM(new Symbol(2, 3, 12, 2, 1, 1, 19, 36), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_WALL_PLANE_LARGE(new Symbol(2, 3, 12, 3, 1, 1, 21, 47), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	TRAVEL_ROTATION_SINGLE_WALL_PLANE(new Symbol(2, 3, 13, 1, 1, 1, 22, 26),
	TRAVEL_ROTATION_DOUBLE_WALL_PLANE(new Symbol(2, 3, 14, 1, 1, 1, 22, 35),
	TRAVEL_ROTATION_ALTERNATING_WALL_PLANE(new Symbol(2, 3, 15, 1, 1, 1, 24, 35),
	TRAVEL_ROTATION_SINGLE_FLOOR_PLANE(new Symbol(2, 3, 16, 1, 1, 1, 21, 30),
	TRAVEL_ROTATION_DOUBLE_FLOOR_PLANE(new Symbol(2, 3, 17, 1, 1, 1, 20, 36),
	TRAVEL_ROTATION_ALTERNATING_FLOOR_PLANE(new Symbol(2, 3, 18, 1, 1, 1, 22, 36),
	TRAVEL_SHAKING_WALL_PLANE(new Symbol(2, 3, 19, 1, 1, 1, 18, 33), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRAVEL_ARM_SPIRAL_WALL_PLANE_SINGLE(new Symbol(2, 3, 20, 1, 1, 1, 25, 35), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRAVEL_ARM_SPIRAL_WALL_PLANE_DOUBLE(new Symbol(2, 3, 20, 2, 1, 1, 25, 42), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRAVEL_ARM_SPIRAL_WALL_PLANE_TRIPLE(new Symbol(2, 3, 20, 3, 1, 1, 25, 50), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DIAGONAL_AWAY_MOVEMENT_SMALL(new Symbol(2, 4, 1, 1, 1, 1, 13, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	DIAGONAL_AWAY_MOVEMENT_MEDIUM(new Symbol(2, 4, 1, 2, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	DIAGONAL_AWAY_MOVEMENT_LARGE(new Symbol(2, 4, 1, 3, 1, 1, 16, 42), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	DIAGONAL_AWAY_MOVEMENT_LARGEST(new Symbol(2, 4, 1, 4, 1, 1, 16, 50), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	DIAGONAL_TOWARDS_MOVEMENT_SMALL(new Symbol(2, 4, 2, 1, 1, 1, 14, 23),
	DIAGONAL_TOWARDS_MOVEMENT_MEDIUM(new Symbol(2, 4, 2, 2, 1, 1, 16, 30),
	DIAGONAL_TOWARDS_MOVEMENT_LARGE(new Symbol(2, 4, 2, 3, 1, 1, 16, 42),
	DIAGONAL_TOWARDS_MOVEMENT_LARGEST(new Symbol(2, 4, 2, 4, 1, 1, 16, 50),
	DIAGONAL_BETWEEN_AWAY_SMALL(new Symbol(2, 4, 3, 1, 1, 1, 14, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_AWAY_MEDIUM(new Symbol(2, 4, 3, 2, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_AWAY_LARGE(new Symbol(2, 4, 3, 3, 1, 1, 16, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_AWAY_LARGEST(new Symbol(2, 4, 3, 4, 1, 1, 16, 50), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_TOWARDS_SMALL(new Symbol(2, 4, 4, 1, 1, 1, 14, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_TOWARDS_MEDIUM(new Symbol(2, 4, 4, 2, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_TOWARDS_LARGE(new Symbol(2, 4, 4, 3, 1, 1, 16, 42), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_TOWARDS_LARGEST(new Symbol(2, 4, 4, 4, 1, 1, 16, 50), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_SMALL(new Symbol(2, 5, 1, 1, 1, 1, 14, 15),
	SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 1, 2, 1, 1, 16, 30),
	SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_LARGE(new Symbol(2, 5, 1, 3, 1, 1, 16, 42),
	SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_LARGEST(new Symbol(2, 5, 1, 4, 1, 1, 16, 50),
	SINGLE_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 1, 5, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DOUBLE_STRAIGHT_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 2, 1, 1, 1, 27, 14), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DOUBLE_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 2, 2, 1, 1, 27, 18), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DOUBLE_ALTERNATING_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 3, 1, 1, 1, 27, 15),
	DOUBLE_ALTERNATING_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 3, 2, 1, 1, 27, 19),
	CROSS_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 4, 1, 1, 1, 31, 27), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPLE_STRAIGHT_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 5, 1, 1, 1, 40, 14), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPLE_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 5, 2, 1, 1, 40, 18), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPLE_ALTERNATING_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 6, 1, 1, 1, 40, 15),
	TRIPLE_ALTERNATING_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 6, 2, 1, 1, 40, 19),
	BENT_FLOOR_PLANE(new Symbol(2, 5, 7, 1, 1, 1, 16, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_FLOOR_PLANE_SMALL(new Symbol(2, 5, 8, 1, 1, 1, 18, 17), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 8, 2, 1, 1, 24, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_FLOOR_PLANE_LARGE(new Symbol(2, 5, 8, 3, 1, 1, 29, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CHECK_FLOOR_PLANE(new Symbol(2, 5, 9, 1, 1, 1, 20, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_FLOOR_PLANE_SMALL(new Symbol(2, 5, 10, 1, 1, 1, 19, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 10, 2, 1, 1, 24, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_FLOOR_PLANE_LARGE(new Symbol(2, 5, 10, 3, 1, 1, 29, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_FLOOR_PLANE_SMALL(new Symbol(2, 5, 11, 1, 1, 1, 16, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 11, 2, 1, 1, 21, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_FLOOR_PLANE_LARGE(new Symbol(2, 5, 11, 3, 1, 1, 22, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_FLOOR_PLANE_SMALL(new Symbol(2, 5, 12, 1, 1, 1, 23, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 12, 2, 1, 1, 33, 36), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_FLOOR_PLANE_LARGE(new Symbol(2, 5, 12, 3, 1, 1, 35, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	TRAVEL_ROTATION_SINGLE_FLOOR_PLANE_FILLED_ARROW(new Symbol(2, 5, 13, 1, 1, 1, 20, 29),
	TRAVEL_ROTATION_DOUBLE_FLOOR_PLANE_FILLED_ARROW(new Symbol(2, 5, 14, 1, 1, 1, 20, 31),
	TRAVEL_ROTATION_ALTERNATING_FLOOR_PLANE_FILLED_ARROW(new Symbol(2, 5, 15, 1, 1, 1, 22, 31),
	TRAVEL_ROTATION_SINGLE_WALL_PLANE_FILLED_ARROW(new Symbol(2, 5, 16, 1, 1, 1, 22, 28),
	TRAVEL_ROTATION_DOUBLE_WALL_PLANE_FILLED_ARROW(new Symbol(2, 5, 17, 1, 1, 1, 22, 39),
	TRAVEL_ROTATION_ALTERNATING_WALL_PLANE_FILLED_ARROW(new Symbol(2, 5, 18, 1, 1, 1, 25, 39),
	TRAVEL_SHAKING_FLOOR_PLANE(new Symbol(2, 5, 19, 1, 1, 1, 16, 32), Arrays.asList(new Integer[] { 1, 2, 3 }),
	CURVE_WALL_PLANE_QUARTER_SMALL(new Symbol(2, 6, 1, 1, 1, 1, 12, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_WALL_PLANE_QUARTER_MEDIUM(new Symbol(2, 6, 1, 2, 1, 1, 15, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_WALL_PLANE_QUARTER_LARGE(new Symbol(2, 6, 1, 3, 1, 1, 17, 36), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_WALL_PLANE_QUARTER_LARGEST(new Symbol(2, 6, 1, 4, 1, 1, 20, 44), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_WALL_PLANE_HALF_CIRCLE_SMALL(new Symbol(2, 6, 2, 1, 1, 1, 21, 28),
	CURVE_WALL_PLANE_HALF_CIRCLE_MEDIUM(new Symbol(2, 6, 2, 2, 1, 1, 24, 33),
	CURVE_WALL_PLANE_HALF_CIRCLE_LARGE(new Symbol(2, 6, 2, 3, 1, 1, 29, 36),
	CURVE_WALL_PLANE_HALF_CIRCLE_LARGEST(new Symbol(2, 6, 2, 4, 1, 1, 37, 54),
	CURVE_WALL_PLANE_3_QUARTER_CIRCLE_SMALL(new Symbol(2, 6, 3, 1, 1, 1, 23, 27),
	CURVE_WALL_PLANE_3_QUARTER_CIRCLE_MEDIUM(new Symbol(2, 6, 3, 2, 1, 1, 28, 33),
	HUMP_WALL_PLANE_SMALL(new Symbol(2, 6, 4, 1, 1, 1, 14, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_WALL_PLANE_MEDIUM(new Symbol(2, 6, 4, 2, 1, 1, 14, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_WALL_PLANE_LARGE(new Symbol(2, 6, 4, 3, 1, 1, 16, 44), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_WALL_PLANE_SMALL(new Symbol(2, 6, 5, 1, 1, 1, 13, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_WALL_PLANE_MEDIUM(new Symbol(2, 6, 5, 2, 1, 1, 15, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_WALL_PLANE_LARGE(new Symbol(2, 6, 5, 3, 1, 1, 19, 47), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_WALL_PLANE_SMALL_DOUBLE(new Symbol(2, 6, 5, 4, 1, 1, 13, 44), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_2_CURVES_SMALL(new Symbol(2, 6, 6, 1, 1, 1, 14, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_2_CURVES_MEDIUM(new Symbol(2, 6, 6, 2, 1, 1, 15, 35), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_2_CURVES_LARGE(new Symbol(2, 6, 6, 3, 1, 1, 18, 39), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_3_CURVES_SMALL(new Symbol(2, 6, 6, 4, 1, 1, 17, 37), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_3_CURVES_MEDIUM(new Symbol(2, 6, 6, 5, 1, 1, 21, 51), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_3_CURVES_LARGE(new Symbol(2, 6, 6, 6, 1, 1, 30, 51), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_THEN_STRAIGHT_MOVEMENT_WALL_PLANE(new Symbol(2, 6, 7, 1, 1, 1, 19, 33),
	CURVED_CROSS_MOVEMENT_WALL_SMALL(new Symbol(2, 6, 7, 2, 1, 1, 21, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVED_CROSS_MOVEMENT_WALL_MEDIUM(new Symbol(2, 6, 7, 3, 1, 1, 27, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ROTATION_SINGLE_WALL_PLANE(new Symbol(2, 6, 8, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_DOUBLE_WALL_PLANE(new Symbol(2, 6, 9, 1, 1, 1, 23, 36), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_ALTERNATE_WALL_PLANE(new Symbol(2, 6, 10, 1, 1, 1, 25, 36),
	SHAKING_WALL_PLANE(new Symbol(2, 6, 11, 1, 1, 1, 21, 33), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	CURVE_HITS_FRONT_WALL(new Symbol(2, 7, 1, 1, 1, 1, 17, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	HUMP_HITS_FRONT_WALL(new Symbol(2, 7, 2, 1, 1, 1, 18, 35), Arrays.asList(new Integer[] { 1, 2, 3 }),
	LOOP_HITS_FRONT_WALL(new Symbol(2, 7, 3, 1, 1, 1, 24, 47), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_HITS_FRONT_WALL(new Symbol(2, 7, 4, 1, 1, 1, 17, 31), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_SINGLE_HITS_FRONT_WALL(new Symbol(2, 7, 5, 1, 1, 1, 28, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_DOUBLE_HITS_FRONT_WALL(new Symbol(2, 7, 6, 1, 1, 1, 36, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_ALTERNATING_HITS_FRONT_WALL(new Symbol(2, 7, 7, 1, 1, 1, 40, 25), Arrays.asList(new Integer[] { 1, 2, 3 }),
	CURVE_HITS_CHEST(new Symbol(2, 7, 9, 1, 1, 1, 13, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	HUMP_HITS_CHEST(new Symbol(2, 7, 10, 1, 1, 1, 13, 36), Arrays.asList(new Integer[] { 1, 2, 3 }),
	LOOP_HITS_CHEST(new Symbol(2, 7, 11, 1, 1, 1, 20, 47), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_HITS_CHEST(new Symbol(2, 7, 12, 1, 1, 1, 19, 36), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_SINGLE_HITS_CHEST(new Symbol(2, 7, 13, 1, 1, 1, 28, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_DOUBLE_HITS_CHEST(new Symbol(2, 7, 14, 1, 1, 1, 36, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_ALTERNATIVE_HITS_CHEST(new Symbol(2, 7, 15, 1, 1, 1, 40, 25), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_DIAGONAL_PATH_SMALL(new Symbol(2, 7, 16, 1, 1, 1, 22, 37), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_DIAGONAL_PATH_MEDIUM(new Symbol(2, 7, 16, 2, 1, 1, 26, 51), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_DIAGONAL_PATH_LARGE(new Symbol(2, 7, 16, 3, 1, 1, 38, 51), Arrays.asList(new Integer[] { 1, 2, 3 }),
	CURVE_HITS_CEILING_SMALL(new Symbol(2, 8, 1, 1, 1, 1, 19, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	CURVE_HITS_CEILING_LARGE(new Symbol(2, 8, 1, 2, 1, 1, 23, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	HUMP_HITS_CEILING_2_HUMPS_SMALL(new Symbol(2, 8, 2, 1, 1, 1, 26, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_CEILING_2_HUMPS_LARGE(new Symbol(2, 8, 2, 2, 1, 1, 31, 33), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_CEILING_3_HUMPS_SMALL(new Symbol(2, 8, 2, 3, 1, 1, 33, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_CEILING_3_HUMPS_LARGE(new Symbol(2, 8, 2, 4, 1, 1, 38, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_CEILING_SMALL_SINGLE(new Symbol(2, 8, 3, 1, 1, 1, 19, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_CEILING_LARGE_SINGLE(new Symbol(2, 8, 3, 2, 1, 1, 22, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_CEILING_SMALL_DOUBLE(new Symbol(2, 8, 3, 3, 1, 1, 19, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_CEILING_LARGE_DOUBLE(new Symbol(2, 8, 3, 4, 1, 1, 22, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_HITS_CEILING_SMALL(new Symbol(2, 8, 4, 1, 1, 1, 23, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_HITS_CEILING_LARGE(new Symbol(2, 8, 4, 2, 1, 1, 33, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ROTATION_SINGLE_HITS_CEILING(new Symbol(2, 8, 5, 1, 1, 1, 26, 23),
	ROTATION_DOUBLE_HITS_CEILING(new Symbol(2, 8, 6, 1, 1, 1, 40, 23),
	ROTATION_ALTERNATING_HITS_CEILING(new Symbol(2, 8, 7, 1, 1, 1, 40, 24),
	CURVE_HITS_FLOOR_SMALL(new Symbol(2, 8, 8, 1, 1, 1, 19, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	CURVE_HITS_FLOOR_LARGE(new Symbol(2, 8, 8, 2, 1, 1, 23, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	HUMP_HITS_FLOOR_2_HUMPS_SMALL(new Symbol(2, 8, 9, 1, 1, 1, 23, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_FLOOR_2_HUMPS_LARGE(new Symbol(2, 8, 9, 2, 1, 1, 31, 33), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_FLOOR_3_HUMPS_SMALL(new Symbol(2, 8, 9, 3, 1, 1, 29, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_FLOOR_3_HUMPS_LARGE(new Symbol(2, 8, 9, 4, 1, 1, 39, 43), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_FLOOR_SMALL_SINGLE(new Symbol(2, 8, 10, 1, 1, 1, 19, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_FLOOR_LARGE_SINGLE(new Symbol(2, 8, 10, 2, 1, 1, 22, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_FLOOR_SMALL_DOUBLE(new Symbol(2, 8, 10, 3, 1, 1, 20, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_FLOOR_LARGE_DOUBLE(new Symbol(2, 8, 10, 4, 1, 1, 22, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_HITS_FLOOR_SMALL(new Symbol(2, 8, 11, 1, 1, 1, 24, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_HITS_FLOOR_LARGE(new Symbol(2, 8, 11, 2, 1, 1, 36, 39), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ROTATION_SINGLE_HITS_FLOOR(new Symbol(2, 8, 12, 1, 1, 1, 26, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_DOUBLE_HITS_FLOOR(new Symbol(2, 8, 13, 1, 1, 1, 39, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_ALTERNATING_HITS_FLOOR(new Symbol(2, 8, 14, 1, 1, 1, 43, 23),
	CURVE_FLOOR_PLANE_SMALL(new Symbol(2, 9, 1, 1, 1, 1, 22, 9), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_FLOOR_PLANE_MEDIUM_1(new Symbol(2, 9, 1, 2, 1, 1, 29, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_FLOOR_PLANE_MEDIUM_2(new Symbol(2, 9, 1, 3, 1, 1, 39, 14), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_FLOOR_PLANE_LARGE(new Symbol(2, 9, 1, 4, 1, 1, 46, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_FLOOR_PLANE_COMBINED(new Symbol(2, 9, 1, 5, 1, 1, 38, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_FLOOR_PLANE_SMALL(new Symbol(2, 9, 2, 1, 1, 1, 40, 11), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_FLOOR_PLANE_SMALL(new Symbol(2, 9, 3, 1, 1, 1, 40, 11), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_FLOOR_PLANE_SNAKE(new Symbol(2, 9, 4, 1, 1, 1, 49, 13), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_FLOOR_PLANE_SMALL(new Symbol(2, 9, 4, 2, 1, 1, 42, 16), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_FLOOR_PLANE_LARGE(new Symbol(2, 9, 4, 3, 1, 1, 50, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ROTATION_SINGLE_FLOOR_PLANE(new Symbol(2, 9, 5, 1, 1, 1, 21, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_DOUBLE_FLOOR_PLANE(new Symbol(2, 9, 6, 1, 1, 1, 21, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_ALTERNATING_FLOOR_PLANE(new Symbol(2, 9, 7, 1, 1, 1, 23, 29),
	SHAKING_PARALLEL_FLOOR(new Symbol(2, 9, 8, 1, 1, 1, 20, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	ARM_CIRCLE_WALL_SMALL_SINGLE(new Symbol(2, 10, 1, 1, 1, 1, 23, 27), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ARM_CIRCLE_WALL_MEDIUM_SINGLE(new Symbol(2, 10, 1, 2, 1, 1, 29, 33), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ARM_CIRCLE_WALL_SMALL_DOUBLE(new Symbol(2, 10, 2, 1, 1, 1, 23, 27), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ARM_CIRCLE_WALL_MEDIUM_DOUBLE(new Symbol(2, 10, 2, 2, 1, 1, 29, 33), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ARM_CIRCLE_HITS_WALL_SMALL_SINGLE(new Symbol(2, 10, 3, 1, 1, 1, 15, 25),
	ARM_CIRCLE_HITS_WALL_MEDIUM_SINGLE(new Symbol(2, 10, 3, 2, 1, 1, 15, 32),
	ARM_CIRCLE_HITS_WALL_LARGE_SINGLE(new Symbol(2, 10, 3, 3, 1, 1, 15, 40),
	ARM_CIRCLE_HITS_WALL_SMALL_DOUBLE(new Symbol(2, 10, 4, 1, 1, 1, 15, 25),
	ARM_CIRCLE_HITS_WALL_MEDIUM_DOUBLE(new Symbol(2, 10, 4, 2, 1, 1, 15, 32),
	ARM_CIRCLE_HITS_WALL_LARGE_DOUBLE(new Symbol(2, 10, 4, 3, 1, 1, 15, 40),
	WRIST_CIRCLE_FRONT_WALL_SINGLE(new Symbol(2, 10, 5, 1, 1, 1, 17, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WRIST_CIRCLE_FRONT_WALL_DOUBLE(new Symbol(2, 10, 5, 2, 1, 1, 21, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WRIST_CIRCLE_HITS_WALL_SINGLE(new Symbol(2, 10, 6, 1, 1, 1, 18, 20), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WRIST_CIRCLE_HITS_WALL_DOUBLE(new Symbol(2, 10, 6, 2, 1, 1, 21, 20), Arrays.asList(new Integer[] { 1, 2, 3 }),
	FINGER_CIRCLES_WALL_SINGLE(new Symbol(2, 10, 7, 1, 1, 1, 16, 17), Arrays.asList(new Integer[] { 1, 2 }),
	FINGER_CIRCLES_WALL_DOUBLE(new Symbol(2, 10, 7, 2, 1, 1, 16, 17), Arrays.asList(new Integer[] { 1, 2 }),
	FINGER_CIRCLES_HITS_WALL_SINGLE(new Symbol(2, 10, 7, 3, 1, 1, 9, 22), Arrays.asList(new Integer[] { 1, 2 }),
	FINGER_CIRCLES_HITS_WALL_DOUBLE(new Symbol(2, 10, 7, 4, 1, 1, 10, 22), Arrays.asList(new Integer[] { 1, 2 }),
	ARROWHEADS_SMALL(new Symbol(2, 10, 8, 1, 1, 1, 13, 7), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ARROWHEADS_LARGE(new Symbol(2, 10, 8, 2, 1, 1, 16, 8), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	SHOULDER_HIP_SPINE(new Symbol(5, 1, 1, 1, 1, 1, 42, 4), Arrays.asList(new Integer[] { 1, 2, 3 }),
	SHOULDER_HIP_POSITIONS(new Symbol(5, 1, 2, 1, 1, 1, 46, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	SHOULDER_HIP_MOVE_WALL_PLANE(new Symbol(5, 1, 3, 1, 1, 1, 54, 10),
	SHOULDER_HIP_MOVE_FLOOR_PLANE(new Symbol(5, 1, 4, 1, 1, 1, 53, 10),
	SHOULDER_TILTS(new Symbol(5, 1, 5, 1, 1, 1, 50, 11), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	TORSO_STRAIGHT_STRETCH_WALL(new Symbol(5, 1, 6, 1, 1, 1, 42, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	TORSO_CURVED_BLEND_WALL(new Symbol(5, 1, 7, 1, 1, 1, 42, 14), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	TORSO_TWIST_FLOOR_PLANE(new Symbol(5, 1, 8, 1, 1, 1, 42, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	UPPER_BODY_TILTS(new Symbol(5, 1, 9, 1, 1, 1, 36, 48), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	LIMB_COMBINATIONS(new Symbol(5, 2, 1, 1, 1, 1, 24, 23), Arrays.asList(new Integer[] { 1 }),
	LIMB_LENGTH_1(new Symbol(5, 2, 2, 1, 1, 1, 2, 25), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_2(new Symbol(5, 2, 2, 2, 1, 1, 2, 32), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_3(new Symbol(5, 2, 2, 3, 1, 1, 2, 40), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_4(new Symbol(5, 2, 2, 4, 1, 1, 2, 48), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_5(new Symbol(5, 2, 3, 1, 1, 1, 2, 16), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_6(new Symbol(5, 2, 3, 2, 1, 1, 2, 12), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_7(new Symbol(5, 2, 3, 3, 1, 1, 2, 8), Arrays.asList(new Integer[] { 1, 2 }),
	FINGERS(new Symbol(5, 2, 4, 1, 1, 1, 9, 14), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	HEAD_WITH_SHOULDERS_OR_NOSE(new Symbol(4, 1, 1, 1, 3, 1, 48, 35), Arrays.asList(new Integer[] { 2, 3, 4 }),
	BREATH_EXHALE(new Symbol(4, 3, 7, 1, 4, 1, 7, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	BREATH_INHALE(new Symbol(4, 3, 7, 2, 4, 1, 7, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	COMMA(new Symbol(7, 1, 1, 1, 1, 1, 74, 8), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PERIOD(new Symbol(7, 1, 1, 2, 1, 1, 72, 8), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	SEMICOLON(new Symbol(7, 1, 2, 1, 1, 1, 72, 14), Arrays.asList(new Integer[] { 1 }),
	COLON(new Symbol(7, 1, 2, 2, 1, 1, 72, 21), Arrays.asList(new Integer[] { 1 }),
	PARENTHESES(new Symbol(7, 1, 3, 1, 1, 1, 60, 15), Arrays.asList(new Integer[] { 1 }),
	INDEX(new Symbol(1, 1, 1, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_CIRCLE(new Symbol(1, 1, 2, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_CUP(new Symbol(1, 1, 3, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_OVAL(new Symbol(1, 1, 4, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_HINGE(new Symbol(1, 1, 5, 1, 1, 1, 22, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_ANGLE(new Symbol(1, 1, 6, 1, 1, 1, 22, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_BENT(new Symbol(1, 1, 7, 1, 1, 1, 15, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_BENT_ON_CIRCLE(new Symbol(1, 1, 8, 1, 1, 1, 16, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_BENT_ON_FIRST_THUMB_UNDER(new Symbol(1, 1, 9, 1, 1, 1, 15, 26),
	INDEX_RAISED_KNUCKLE(new Symbol(1, 1, 10, 1, 1, 1, 15, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_CUP(new Symbol(1, 1, 11, 1, 1, 1, 15, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_HINGE_ON_FIST(new Symbol(1, 1, 12, 1, 1, 1, 17, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_HINGE_ON_FIST_LOW(new Symbol(1, 1, 13, 1, 1, 1, 17, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_HINGE_ON_CIRCLE(new Symbol(1, 1, 14, 1, 1, 1, 18, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE(new Symbol(1, 2, 1, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_ON_CIRCLE(new Symbol(1, 2, 2, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_BENT(new Symbol(1, 2, 3, 1, 1, 1, 15, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RAISED_KNUCKLES(new Symbol(1, 2, 4, 1, 1, 1, 15, 20),
	INDEX_MIDDLE_HINGE(new Symbol(1, 2, 5, 1, 1, 1, 19, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_UP_MIDDLE_HINGE(new Symbol(1, 2, 6, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_HINGE_MIDDLE_UP(new Symbol(1, 2, 7, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_UNIT(new Symbol(1, 2, 8, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_UNIT_INDEX_BENT(new Symbol(1, 2, 9, 1, 1, 1, 15, 32),
	INDEX_MIDDLE_UNIT_MIDDLE_BENT(new Symbol(1, 2, 10, 1, 1, 1, 15, 32),
	INDEX_MIDDLE_UNIT_CUP(new Symbol(1, 2, 11, 1, 1, 1, 15, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_UNIT_HINGE(new Symbol(1, 2, 12, 1, 1, 1, 17, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_CROSS(new Symbol(1, 2, 13, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_CROSS_ON_CIRCLE(new Symbol(1, 2, 14, 1, 1, 1, 16, 30),
	MIDDLE_BENT_OVER_INDEX(new Symbol(1, 2, 15, 1, 1, 1, 15, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_BENT_OVER_MIDDLE(new Symbol(1, 2, 16, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB(new Symbol(1, 3, 1, 1, 1, 1, 23, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB_ON_CIRCLE(new Symbol(1, 3, 2, 1, 1, 1, 24, 30),
	INDEX_MIDDLE_STRAIGHT_THUMB_BENT(new Symbol(1, 3, 3, 1, 1, 1, 22, 30),
	INDEX_MIDDLE_BENT_THUMB_STRAIGHT(new Symbol(1, 3, 4, 1, 1, 1, 24, 27),
	INDEX_MIDDLE_THUMB_BENT(new Symbol(1, 3, 5, 1, 1, 1, 22, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_HINGE_SPREAD_THUMB_SIDE(new Symbol(1, 3, 6, 1, 1, 1, 23, 23),
	INDEX_UP_MIDDLE_HINGE_THUMB_SIDE(new Symbol(1, 3, 7, 1, 1, 1, 23, 30),
	INDEX_UP_MIDDLE_HINGE_THUMB_UNIT(new Symbol(1, 3, 8, 1, 1, 1, 18, 30),
	INDEX_HINGE_MIDDLE_UP_THUMB_SIDE(new Symbol(1, 3, 9, 1, 1, 1, 23, 30),
	INDEX_MIDDLE_UP_SPREAD_THUMB_FORWARD(new Symbol(1, 3, 10, 1, 1, 1, 15, 30),
	INDEX_MIDDLE_THUMB_CUP(new Symbol(1, 3, 11, 1, 1, 1, 23, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB_CIRCLE(new Symbol(1, 3, 12, 1, 1, 1, 24, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB_HOOK(new Symbol(1, 3, 13, 1, 1, 1, 25, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB_HINGE(new Symbol(1, 3, 14, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_BETWEEN_INDEX_MIDDLE_STRAIGHT(new Symbol(1, 3, 15, 1, 1, 1, 30, 19),
	INDEX_MIDDLE_UNIT_THUMB_SIDE(new Symbol(1, 3, 16, 1, 1, 1, 23, 30),
	INDEX_MIDDLE_UNIT_THUMB_SIDE_UNIT(new Symbol(1, 3, 17, 1, 1, 1, 18, 30),
	INDEX_MIDDLE_UNIT_THUMB_SIDE_BENT(new Symbol(1, 3, 18, 1, 1, 1, 22, 30),
	MIDDLE_THUMB_HOOK_INDEX_UP(new Symbol(1, 3, 19, 1, 1, 1, 18, 32),
	INDEX_THUMB_HOOK_MIDDLE_UP(new Symbol(1, 3, 20, 1, 1, 1, 21, 30),
	INDEX_MIDDLE_UNIT_HINGE_THUMB_SIDE(new Symbol(1, 3, 21, 1, 1, 1, 24, 25),
	INDEX_MIDDLE_CROSS_THUMB_SIDE(new Symbol(1, 3, 22, 1, 1, 1, 22, 30),
	INDEX_MIDDLE_UNIT_THUMB_FORWARD(new Symbol(1, 3, 23, 1, 1, 1, 15, 30),
	INDEX_MIDDLE_UNIT_CUP_THUMB_FORWARD(new Symbol(1, 3, 24, 1, 1, 1, 24, 25),
	MIDDLE_THUMB_CUP_INDEX_UP(new Symbol(1, 3, 25, 1, 1, 1, 23, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CUP_MIDDLE_UP(new Symbol(1, 3, 26, 1, 1, 1, 23, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_THUMB_CIRCLE_INDEX_UP(new Symbol(1, 3, 27, 1, 1, 1, 24, 30),
	MIDDLE_THUMB_CIRCLE_INDEX_HINGE(new Symbol(1, 3, 28, 1, 1, 1, 24, 25),
	INDEX_THUMB_ANGLE_OUT_MIDDLE_UP(new Symbol(1, 3, 29, 1, 1, 1, 24, 30),
	INDEX_THUMB_ANGLE_IN_MIDDLE_UP(new Symbol(1, 3, 30, 1, 1, 1, 23, 30),
	INDEX_THUMB_CIRCLE_MIDDLE_UP(new Symbol(1, 3, 31, 1, 1, 1, 24, 30),
	INDEX_MIDDLE_THUMB_UNIT_HINGE(new Symbol(1, 3, 32, 1, 1, 1, 29, 15),
	INDEX_MIDDLE_THUMB_ANGLE_OUT(new Symbol(1, 3, 33, 1, 1, 1, 29, 19),
	INDEX_MIDDLE_THUMB_ANGLE(new Symbol(1, 3, 34, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_THUMB_ANGLE_OUT_INDEX_UP(new Symbol(1, 3, 35, 1, 1, 1, 29, 30),
	MIDDLE_THUMB_ANGLE_OUT_INDEX_CROSSED(new Symbol(1, 3, 36, 1, 1, 1, 29, 21),
	MIDDLE_THUMB_ANGLE_INDEX_UP(new Symbol(1, 3, 37, 1, 1, 1, 29, 30),
	INDEX_THUMB_HOOK_MIDDLE_HINGE(new Symbol(1, 3, 38, 1, 1, 1, 29, 24),
	FOUR_FINGERS(new Symbol(1, 4, 1, 1, 1, 1, 22, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_BENT(new Symbol(1, 4, 2, 1, 1, 1, 23, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_HINGE(new Symbol(1, 4, 3, 1, 1, 1, 18, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT(new Symbol(1, 4, 4, 1, 1, 1, 14, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT_SPLIT(new Symbol(1, 4, 5, 1, 1, 1, 14, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT_CLAW(new Symbol(1, 4, 6, 1, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT_BENT(new Symbol(1, 4, 7, 1, 1, 1, 15, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT_HINGE(new Symbol(1, 4, 8, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD(new Symbol(1, 5, 1, 1, 1, 1, 23, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_HEEL(new Symbol(1, 5, 2, 1, 2, 1, 30, 18), Arrays.asList(new Integer[] { 2 })), //
	FIVE_FINGERS_SPREAD_FOUR_BENT(new Symbol(1, 5, 3, 1, 1, 1, 25, 31),
	FIVE_FINGERS_SPREAD_FOUR_BENT_HEEL(new Symbol(1, 5, 4, 1, 2, 1, 30, 16), Arrays.asList(new Integer[] { 2 })), //
	FIVE_FINGERS_SPREAD_BENT(new Symbol(1, 5, 5, 1, 1, 1, 25, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_BENT_HEEL(new Symbol(1, 5, 6, 1, 2, 1, 29, 16), Arrays.asList(new Integer[] { 2 })), //
	FIVE_FINGERS_SPREAD_THUMB_FORWARD(new Symbol(1, 5, 7, 1, 1, 1, 20, 31),
	FIVE_FINGERS_SPREAD_CUP(new Symbol(1, 5, 8, 1, 1, 1, 15, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_CUP_OPEN(new Symbol(1, 5, 9, 1, 1, 1, 15, 25),
	FIVE_FINGERS_SPREAD_HINGE_OPEN(new Symbol(1, 5, 10, 1, 1, 1, 15, 26),
	FIVE_FINGERS_SPREAD_OVAL(new Symbol(1, 5, 11, 1, 1, 1, 16, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_HINGE(new Symbol(1, 5, 12, 1, 1, 1, 18, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_HINGE_THUMB_SIDE(new Symbol(1, 5, 13, 1, 1, 1, 26, 26),
	FIVE_FINGERS_SPREAD_HINGE_NO_THUMB(new Symbol(1, 5, 14, 1, 1, 1, 18, 26),
	FLAT(new Symbol(1, 5, 15, 1, 1, 1, 12, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_BETWEEN_PALM_FACINGS(new Symbol(1, 5, 16, 1, 1, 1, 12, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4 })), //
	FLAT_HEEL(new Symbol(1, 5, 17, 1, 2, 1, 20, 9), Arrays.asList(new Integer[] { 2 })), //
	FLAT_THUMB_SIDE(new Symbol(1, 5, 18, 1, 1, 1, 19, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_THUMB_SIDE_HEEL(new Symbol(1, 5, 19, 1, 2, 1, 27, 10), Arrays.asList(new Integer[] { 2 })), //
	FLAT_THUMB_BENT(new Symbol(1, 5, 20, 1, 1, 1, 20, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_THUMB_FORWARD(new Symbol(1, 5, 21, 1, 1, 1, 12, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_SPLIT_INDEX_THUMB_SIDE(new Symbol(1, 5, 22, 1, 1, 1, 20, 29),
	FLAT_SPLIT_CENTER(new Symbol(1, 5, 23, 1, 1, 1, 12, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_SPLIT_CENTER_THUMB_SIDE(new Symbol(1, 5, 24, 1, 1, 1, 20, 27),
	FLAT_SPLIT_CENTER_THUMB_SID_BENT(new Symbol(1, 5, 25, 1, 1, 1, 20, 27),
	FLAT_SPLIT_BABY(new Symbol(1, 5, 26, 1, 1, 1, 19, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CLAW(new Symbol(1, 5, 27, 1, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CLAW_THUMB_SIDE(new Symbol(1, 5, 28, 1, 1, 1, 23, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CLAW_NO_THUMB(new Symbol(1, 5, 29, 1, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CLAW_THUMB_FORWARD(new Symbol(1, 5, 30, 1, 1, 1, 19, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HOOK_CURLICUE(new Symbol(1, 5, 31, 1, 1, 1, 20, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HOOK(new Symbol(1, 5, 32, 1, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_OPEN(new Symbol(1, 5, 33, 1, 1, 1, 20, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP(new Symbol(1, 5, 34, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_OPEN_THUMB_SIDE(new Symbol(1, 5, 35, 1, 1, 1, 23, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_THUMB_SIDE(new Symbol(1, 5, 36, 1, 1, 1, 24, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_OPEN_NO_THUMB(new Symbol(1, 5, 37, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_NO_THUMB(new Symbol(1, 5, 38, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_OPEN_THUMB_FORWARD(new Symbol(1, 5, 39, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_THUMB_FORWARD(new Symbol(1, 5, 40, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CURLICUE_OPEN(new Symbol(1, 5, 41, 1, 1, 1, 21, 16), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CURLICUE(new Symbol(1, 5, 42, 1, 1, 1, 21, 17), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CIRCLE(new Symbol(1, 5, 43, 1, 1, 1, 16, 16), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	OVAL(new Symbol(1, 5, 44, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	OVAL_THUMB_SIDE(new Symbol(1, 5, 45, 1, 1, 1, 26, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	OVAL_NO_THUMB(new Symbol(1, 5, 46, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	OVAL_THUMB_FORWARD(new Symbol(1, 5, 47, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_OPEN(new Symbol(1, 5, 48, 1, 1, 1, 17, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_OPEN_THUMB_FORWARD(new Symbol(1, 5, 49, 1, 1, 1, 17, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE(new Symbol(1, 5, 50, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_SMALL(new Symbol(1, 5, 51, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_OPEN_THUMB_SIDE(new Symbol(1, 5, 52, 1, 1, 1, 15, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_THUMB_SIDE(new Symbol(1, 5, 53, 1, 1, 1, 30, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_OPEN_NO_THUMB(new Symbol(1, 5, 54, 1, 1, 1, 12, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_NO_THUMB(new Symbol(1, 5, 55, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_THUMB_SIDE_TOUCHES_INDEX(new Symbol(1, 5, 56, 1, 1, 1, 24, 19),
	HINGE_THUMB_BETWEEN_MIDDLE_RING(new Symbol(1, 5, 57, 1, 1, 1, 24, 18),
	ANGLE(new Symbol(1, 5, 58, 1, 1, 1, 24, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING(new Symbol(1, 6, 1, 1, 1, 1, 18, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_ON_CIRCLE(new Symbol(1, 6, 2, 1, 1, 1, 18, 29),
	INDEX_MIDDLE_RING_ON_HINGE(new Symbol(1, 6, 3, 1, 1, 1, 20, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_ON_ANGLE(new Symbol(1, 6, 4, 1, 1, 1, 19, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_HINGE(new Symbol(1, 6, 5, 1, 1, 1, 23, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_BENT(new Symbol(1, 6, 6, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_UNIT(new Symbol(1, 6, 7, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_UNIT_HINGE(new Symbol(1, 6, 8, 1, 1, 1, 20, 25),
	BABY_DOWN(new Symbol(1, 6, 9, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_DOWN_RIPPLE_STRAIGHT(new Symbol(1, 6, 10, 1, 1, 1, 21, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_DOWN_RIPPLE_CURVED(new Symbol(1, 6, 11, 1, 1, 1, 23, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_DOWN_OTHERS_CIRCLE(new Symbol(1, 6, 12, 1, 1, 1, 24, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_UP(new Symbol(1, 6, 13, 1, 1, 1, 21, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_UP_ON_FIRST_THUMB_UNDER(new Symbol(1, 6, 14, 1, 1, 1, 21, 19),
	BABY_UP_ON_CIRCLE(new Symbol(1, 6, 15, 1, 1, 1, 21, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_UP_ON_OVAL(new Symbol(1, 6, 16, 1, 1, 1, 20, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_UP_ON_ANGLE(new Symbol(1, 6, 17, 1, 1, 1, 23, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_RAISED_KNUCKLE(new Symbol(1, 6, 18, 1, 1, 1, 18, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_BENT(new Symbol(1, 6, 19, 1, 1, 1, 19, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_THOUCHES_THUMB(new Symbol(1, 6, 20, 1, 1, 1, 22, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_THUMB(new Symbol(1, 6, 21, 1, 1, 1, 28, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_THUMB_ON_HINGE(new Symbol(1, 6, 22, 1, 1, 1, 30, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_THUMB(new Symbol(1, 6, 23, 1, 1, 1, 28, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_THUMB_ON_HINGE(new Symbol(1, 6, 24, 1, 1, 1, 29, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_THUMB_INDEX_THUMB_ANGLE_OUT(new Symbol(1, 6, 25, 1, 1, 1, 30, 23),
	BABY_INDEX_THUMB_INDEX_THUMB_ANGLE(new Symbol(1, 6, 26, 1, 1, 1, 29, 23),
	BABY_INDEX(new Symbol(1, 6, 27, 1, 1, 1, 20, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_ON_CIRCLE(new Symbol(1, 6, 28, 1, 1, 1, 21, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_ON_HINGE(new Symbol(1, 6, 29, 1, 1, 1, 23, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_ON_ANGLE(new Symbol(1, 6, 30, 1, 1, 1, 23, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_BABY(new Symbol(1, 7, 1, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_BABY_ON_CIRCLE(new Symbol(1, 7, 2, 1, 1, 1, 21, 28),
	INDEX_MIDDLE_BABY_ON_HINGE(new Symbol(1, 7, 3, 1, 1, 1, 18, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_HINGE(new Symbol(1, 7, 4, 1, 1, 1, 25, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_BABY_ON_ANGLE(new Symbol(1, 7, 5, 1, 1, 1, 18, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_CROSS_WITH_BABY(new Symbol(1, 7, 6, 1, 1, 1, 20, 30),
	INDEX_MIDDLE_CROSS_WITH_BABY_ON_CIRCLE(new Symbol(1, 7, 7, 1, 1, 1, 21, 30),
	RING_DOWN(new Symbol(1, 7, 8, 1, 1, 1, 25, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_DOWN_INDEX_THUMB_HOOK_MIDDLE_HINGE(new Symbol(1, 7, 9, 1, 1, 1, 34, 24),
	RING_DOWN_MIDDLE_THUMB_ANGLE_INDEX_CROSS(new Symbol(1, 7, 10, 1, 1, 1, 34, 21),
	RING_UP(new Symbol(1, 7, 11, 1, 1, 1, 16, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_RAISED_KNUCKLE(new Symbol(1, 7, 12, 1, 1, 1, 15, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_BABY(new Symbol(1, 7, 13, 1, 1, 1, 20, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_BABY_ON_CIRCLE(new Symbol(1, 7, 14, 1, 1, 1, 21, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_BABY_ON_OVAL(new Symbol(1, 7, 15, 1, 1, 1, 20, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_BABY_ON_ANGLE(new Symbol(1, 7, 16, 1, 1, 1, 23, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_MIDDLE(new Symbol(1, 7, 17, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_MIDDLE_UNIT(new Symbol(1, 7, 18, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_MIDDLE_RAISED_KNUCKLES(new Symbol(1, 7, 19, 1, 1, 1, 15, 20),
	RING_INDEX(new Symbol(1, 7, 20, 1, 1, 1, 16, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_THUMB(new Symbol(1, 7, 21, 1, 1, 1, 23, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_THUMB_HOOK(new Symbol(1, 7, 22, 1, 1, 1, 15, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY(new Symbol(1, 8, 1, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_CIRCLE(new Symbol(1, 8, 2, 1, 1, 1, 21, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_CURLICUE(new Symbol(1, 8, 3, 1, 1, 1, 21, 29),
	INDEX_RING_BABY_ON_HOOK_OUT(new Symbol(1, 8, 4, 1, 1, 1, 17, 30),
	INDEX_RING_BABY_ON_HOOK_IN(new Symbol(1, 8, 5, 1, 1, 1, 17, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_HOOK_UNDER(new Symbol(1, 8, 6, 1, 1, 1, 17, 30),
	INDEX_RING_BABY_ON_CUP(new Symbol(1, 8, 7, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_HINGE(new Symbol(1, 8, 8, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_ANGLE_OUT(new Symbol(1, 8, 9, 1, 1, 1, 23, 28),
	INDEX_RING_BABY_ON_ANGLE(new Symbol(1, 8, 10, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_DOWN(new Symbol(1, 8, 11, 1, 1, 1, 25, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_HINGE(new Symbol(1, 8, 12, 1, 1, 1, 30, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_UP(new Symbol(1, 8, 13, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_UP_ON_CIRCLE(new Symbol(1, 8, 14, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RAISED_KNUCKLE(new Symbol(1, 8, 15, 1, 1, 1, 15, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_UP_THUMB_SIDE(new Symbol(1, 8, 16, 1, 1, 1, 22, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_THUMB_HOOK(new Symbol(1, 8, 17, 1, 1, 1, 15, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_THUMB_BABY(new Symbol(1, 8, 18, 1, 1, 1, 27, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_BABY(new Symbol(1, 8, 19, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY(new Symbol(1, 9, 1, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_ON_CIRCLE(new Symbol(1, 9, 2, 1, 1, 1, 22, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_ON_CURLICUE(new Symbol(1, 9, 3, 1, 1, 1, 21, 29),
	MIDDLE_RING_BABY_ON_CUP(new Symbol(1, 9, 4, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_ON_HINGE(new Symbol(1, 9, 5, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_ON_ANGLE_OUT(new Symbol(1, 9, 6, 1, 1, 1, 23, 28),
	MIDDLE_RING_BABY_ON_ANGLE_IN(new Symbol(1, 9, 7, 1, 1, 1, 23, 28),
	MIDDLE_RING_BABY_ON_ANGLE(new Symbol(1, 9, 8, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_BENT(new Symbol(1, 9, 9, 1, 1, 1, 24, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_UNIT_ON_CLAW(new Symbol(1, 9, 10, 1, 1, 1, 14, 29),
	MIDDLE_RING_BABY_UNIT_ON_CLAW_SIDE(new Symbol(1, 9, 11, 1, 1, 1, 19, 29),
	MIDDLE_RING_BABY_UNIT_ON_HOOK_OUT(new Symbol(1, 9, 12, 1, 1, 1, 17, 29),
	MIDDLE_RING_BABY_UNIT_ON_HOOK_IN(new Symbol(1, 9, 13, 1, 1, 1, 16, 29),
	MIDDLE_RING_BABY_UNIT_ON_HOOK(new Symbol(1, 9, 14, 1, 1, 1, 16, 29),
	INDEX_HINGE(new Symbol(1, 9, 15, 1, 1, 1, 28, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_SIDE(new Symbol(1, 9, 16, 1, 1, 1, 24, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_SIDE_ON_HINGE(new Symbol(1, 9, 17, 1, 1, 1, 28, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_SIDE_THUMB_DIAGONAL(new Symbol(1, 9, 18, 1, 1, 1, 22, 30),
	INDEX_THUMB_SIDE_THUMB_UNIT(new Symbol(1, 9, 19, 1, 1, 1, 18, 30),
	INDEX_THUMB_SIDE_THUMB_BENT(new Symbol(1, 9, 20, 1, 1, 1, 23, 30),
	INDEX_THUMB_SIDE_INDEX_BENT(new Symbol(1, 9, 21, 1, 1, 1, 24, 26),
	INDEX_THUMB_SIDE_BOTH_BENT(new Symbol(1, 9, 22, 1, 1, 1, 22, 26),
	INDEX_THUMB_SIDE_INDEX_HINGE(new Symbol(1, 9, 23, 1, 1, 1, 24, 26),
	INDEX_THUMB_FORWARD_INDEX_STRAIGHT(new Symbol(1, 9, 24, 1, 1, 1, 15, 30),
	INDEX_THUMB_FORWARD_INDEX_BENT(new Symbol(1, 9, 25, 1, 1, 1, 15, 26),
	INDEX_THUMB_HOOK(new Symbol(1, 9, 26, 1, 1, 1, 23, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CURLICUE(new Symbol(1, 9, 27, 1, 1, 1, 26, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CURVE_THUMB_INSIDE(new Symbol(1, 9, 28, 1, 1, 1, 25, 21),
	INDEX_THUMB_CURVE_THUMB_INSIDE_ON_CLAW(new Symbol(1, 9, 29, 1, 1, 1, 18, 26),
	INDEX_THUMB_CURVE_THUMB_UNDER(new Symbol(1, 9, 30, 1, 1, 1, 23, 21),
	INDEX_THUMB_CIRCLE(new Symbol(1, 9, 31, 1, 1, 1, 24, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CUP(new Symbol(1, 9, 32, 1, 1, 1, 23, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CUP_OPEN(new Symbol(1, 9, 33, 1, 1, 1, 26, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_HINGE_OPEN(new Symbol(1, 9, 34, 1, 1, 1, 25, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_HINGE_LARGE(new Symbol(1, 9, 35, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_HINGE(new Symbol(1, 9, 36, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_HINGE_SMALL(new Symbol(1, 9, 37, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_ANGLE_OUT(new Symbol(1, 9, 38, 1, 1, 1, 30, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_ANGLE_IN(new Symbol(1, 9, 39, 1, 1, 1, 30, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_ANGLE(new Symbol(1, 9, 40, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB(new Symbol(1, 10, 1, 1, 1, 1, 24, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_HEEL(new Symbol(1, 10, 2, 1, 2, 1, 24, 10), Arrays.asList(new Integer[] { 2 })), //
	THUMB_SIDE_DIAGONAL(new Symbol(1, 10, 3, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_SIDE_UNIT(new Symbol(1, 10, 4, 1, 1, 1, 18, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_SIDE_BENT(new Symbol(1, 10, 5, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_FORWARD(new Symbol(1, 10, 6, 1, 1, 1, 15, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_BETWEEN_INDEX_MIDDLE(new Symbol(1, 10, 7, 1, 1, 1, 15, 19),
	THUMB_BETWEEN_MIDDLE_RING(new Symbol(1, 10, 8, 1, 1, 1, 15, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_BETWEEN_RING_BABY(new Symbol(1, 10, 9, 1, 1, 1, 15, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_UNDER_TWO_FINGERS(new Symbol(1, 10, 10, 1, 1, 1, 15, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_OVER_TWO_FINGERS(new Symbol(1, 10, 11, 1, 1, 1, 15, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_UNDER_THREE_FINGERS(new Symbol(1, 10, 12, 1, 1, 1, 15, 18),
	THUMB_UNDER_FOUR_FINGERS(new Symbol(1, 10, 13, 1, 1, 1, 15, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_OVER_FOUR_RAISED_KNUCKLES(new Symbol(1, 10, 14, 1, 1, 1, 18, 20),
	FIST(new Symbol(1, 10, 15, 1, 1, 1, 15, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIST_HEEL(new Symbol(1, 10, 16, 1, 2, 1, 15, 11), Arrays.asList(new Integer[] { 2 })), //
	MOUTH_CLOSED_NEUTRAL(new Symbol(4, 4, 1, 1, 2, 1, 14, 2), Arrays.asList(new Integer[] { 2 }),
	MOUTH_CLOSED_FORWARD(new Symbol(4, 4, 1, 2, 2, 1, 22, 9), Arrays.asList(new Integer[] { 2 }),
	MOUTH_CLOSED_CONTACT(new Symbol(4, 4, 1, 3, 2, 1, 18, 11), Arrays.asList(new Integer[] { 2 }),
	MOUTH_SMILE(new Symbol(4, 4, 2, 1, 2, 1, 15, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_SMILE_WRINKLED(new Symbol(4, 4, 2, 2, 2, 1, 21, 8), Arrays.asList(new Integer[] { 2 }),
	MOUTH_SMILE_OPEN(new Symbol(4, 4, 2, 3, 2, 1, 15, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_FROWN(new Symbol(4, 4, 3, 1, 2, 1, 15, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_FROWN_WRINKLED(new Symbol(4, 4, 3, 2, 2, 1, 21, 7), Arrays.asList(new Integer[] { 2 }),
	MOUTH_FROWN_OPEN(new Symbol(4, 4, 3, 3, 2, 1, 15, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_CIRCLE(new Symbol(4, 4, 4, 1, 2, 1, 9, 8), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_FORWARD(new Symbol(4, 4, 4, 2, 2, 1, 21, 10), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_WRINKLED(new Symbol(4, 4, 4, 3, 2, 1, 13, 14), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_OVAL(new Symbol(4, 4, 5, 1, 2, 1, 14, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_OVAL_WRINKLED(new Symbol(4, 4, 5, 2, 2, 1, 23, 7), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_OVAL_YAWN(new Symbol(4, 4, 5, 3, 2, 1, 6, 12), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_RECTANGLE(new Symbol(4, 4, 6, 1, 2, 1, 10, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_RECTANGLE_WRINKLED(new Symbol(4, 4, 6, 2, 2, 1, 16, 12), Arrays.asList(new Integer[] { 2 }),
	MOUTH_OPEN_RECTANGLE_YAWN(new Symbol(4, 4, 6, 3, 2, 1, 6, 10), Arrays.asList(new Integer[] { 2 }),
	MOUTH_KISS(new Symbol(4, 4, 7, 1, 2, 1, 5, 6), Arrays.asList(new Integer[] { 2 }),
	MOUTH_KISS_FORWARD(new Symbol(4, 4, 7, 2, 2, 1, 19, 10), Arrays.asList(new Integer[] { 2 }),
	MOUTH_KISS_WRINKLED(new Symbol(4, 4, 7, 3, 2, 1, 11, 11), Arrays.asList(new Integer[] { 2 }),
	MOUTH_TENSE(new Symbol(4, 4, 8, 1, 2, 1, 11, 5), Arrays.asList(new Integer[] { 2 }),
	MOUTH_TENSE_FORWARD(new Symbol(4, 4, 8, 2, 2, 1, 23, 10), Arrays.asList(new Integer[] { 2 }),
	MOUTH_TENSE_SUCKED(new Symbol(4, 4, 8, 3, 2, 1, 23, 10), Arrays.asList(new Integer[] { 2 }),
	LIPS_PRESSED_TOGETHER(new Symbol(4, 4, 9, 1, 2, 1, 13, 7), Arrays.asList(new Integer[] { 2 }),
	LIP_LOWER_OVER_UPPER(new Symbol(4, 4, 9, 2, 2, 1, 14, 4), Arrays.asList(new Integer[] { 2 }),
	LIP_UPPER_OVER_LOWER(new Symbol(4, 4, 9, 3, 2, 1, 14, 4), Arrays.asList(new Integer[] { 2 }),
	MOUTH_CORNERS(new Symbol(4, 4, 10, 1, 4, 1, 23, 6), Arrays.asList(new Integer[] { 4, 5, 6 }),
	MOUTH_WRINKLES_SINGLE(new Symbol(4, 4, 11, 1, 4, 1, 20, 7), Arrays.asList(new Integer[] { 4, 5, 6 }),
	MOUTH_WRINKLES_DOUBLE(new Symbol(4, 4, 11, 2, 4, 1, 24, 7), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TONGUE_STICKS_OUT_FAR(new Symbol(4, 5, 1, 1, 2, 1, 10, 13), Arrays.asList(new Integer[] { 2 }),
	TONGUE_LICKS_LIPS(new Symbol(4, 5, 1, 2, 2, 1, 14, 6), Arrays.asList(new Integer[] { 2 }),
	TONGUE_TIP_BETWEEN_LIPS(new Symbol(4, 5, 1, 3, 2, 1, 16, 6), Arrays.asList(new Integer[] { 2 }),
	TONGUE_TIP_TOUCHES_INSIDE_MOUTH(new Symbol(4, 5, 1, 4, 2, 1, 10, 10), Arrays.asList(new Integer[] { 2 }),
	TONGUE_INSIDE_MOUTH_RELAXED(new Symbol(4, 5, 1, 5, 2, 1, 10, 10), Arrays.asList(new Integer[] { 2 }),
	TONGUE_CENTER_STICKS_OUT(new Symbol(4, 5, 3, 1, 4, 1, 10, 10), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TONGUE_CENTER_INSIDE_MOUTH(new Symbol(4, 5, 4, 1, 3, 1, 10, 10), Arrays.asList(new Integer[] { 3, 4 }),
	TEETH(new Symbol(4, 5, 5, 1, 2, 1, 15, 8), Arrays.asList(new Integer[] { 2, 3, 4, 5, 6 }),
	TEETH_MOVEMENT(new Symbol(4, 5, 5, 2, 4, 1, 27, 12), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TEETH_ON_TONGUE(new Symbol(4, 5, 6, 1, 3, 1, 15, 10), Arrays.asList(new Integer[] { 3, 4, 5, 6 }),
	TEETH_ON_TONGUE_MOVEMENT(new Symbol(4, 5, 6, 2, 4, 1, 25, 15), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TEETH_ON_LIPS(new Symbol(4, 5, 7, 1, 3, 1, 10, 6), Arrays.asList(new Integer[] { 3, 4, 5, 6 }),
	TEETH_ON_LIPS_MOVEMENT(new Symbol(4, 5, 7, 2, 4, 1, 24, 11), Arrays.asList(new Integer[] { 4, 5, 6 }),
	TEETH_BITE_LIPS(new Symbol(4, 5, 8, 1, 4, 1, 15, 8), Arrays.asList(new Integer[] { 4, 5, 6 }),
	AIR_BLOWING_OUT(new Symbol(4, 3, 5, 1, 4, 1, 48, 22), Arrays.asList(new Integer[] { 4, 5, 6 }),
	AIR_SUCKING_IN(new Symbol(4, 3, 5, 2, 4, 1, 48, 22), Arrays.asList(new Integer[] { 4, 5, 6 }),
	JAW_MOVEMENT_WALL_PLANE(new Symbol(4, 5, 9, 1, 2, 1, 8, 9), Arrays.asList(new Integer[] { 2, 3 }),
	JAW_MOVEMENT_FLOOR_PLANE(new Symbol(4, 5, 10, 1, 2, 1, 7, 9), Arrays.asList(new Integer[] { 2, 3 }),
	JAW_PART_HEAD_RIM(new Symbol(4, 99, 999, 96, 1, 1, 14, 4), Arrays.asList(new Integer[] { 1 }),
	CHEEKS_PUFFED(new Symbol(4, 3, 1, 1, 4, 1, 9, 15), Arrays.asList(new Integer[] { 4, 5 }),
	CHEEKS_NEUTRAL(new Symbol(4, 3, 1, 2, 4, 1, 9, 16), Arrays.asList(new Integer[] { 4, 5 }),
	CHEEKS_SUCKED(new Symbol(4, 3, 1, 3, 4, 1, 12, 10), Arrays.asList(new Integer[] { 4, 5 }),
	TENSE_CHEEKS_HIGH(new Symbol(4, 3, 2, 1, 4, 1, 11, 5), Arrays.asList(new Integer[] { 4 }),
	TENSE_CHEEKS_MIDDLE(new Symbol(4, 3, 2, 2, 4, 1, 11, 5), Arrays.asList(new Integer[] { 4 }),
	TENSE_CHEEKS_LOW(new Symbol(4, 3, 2, 3, 4, 1, 11, 5), Arrays.asList(new Integer[] { 4 }),
	NECK(new Symbol(4, 5, 11, 1, 2, 1, 20, 13), Arrays.asList(new Integer[] { 2, 3, 4, 5, 6 }),
	EYEBROWS_STRAIGHT_UP(new Symbol(4, 2, 1, 1, 4, 1, 23, 10), Arrays.asList(new Integer[] { 4, 5, 6 }),
	EYEBROWS_STRAIGHT_NEUTRAL(new Symbol(4, 2, 1, 2, 4, 1, 22, 6), Arrays.asList(new Integer[] { 4, 5, 6 }),
	EYEBROWS_STRAIGHT_DOWN(new Symbol(4, 2, 1, 3, 4, 1, 22, 10), Arrays.asList(new Integer[] { 4, 5, 6 }),
	DREAMY_EYEBROWS_NEUTRAL_DOWN(new Symbol(4, 2, 2, 1, 4, 1, 26, 9), Arrays.asList(new Integer[] { 4, 5, 6 }),
	DREAMY_EYEBROWS_DOWN_NEUTRAL(new Symbol(4, 2, 2, 2, 4, 1, 24, 8), Arrays.asList(new Integer[] { 4, 5, 6 }),
	DREAMY_EYEBROWS_UP_NEUTRAL(new Symbol(4, 2, 2, 3, 4, 1, 24, 8), Arrays.asList(new Integer[] { 4, 5, 6 }),
	DREAMY_EYEBROWS_NEUTRAL_UP(new Symbol(4, 2, 2, 4, 4, 1, 24, 8), Arrays.asList(new Integer[] { 4, 5, 6 }),
	FOREHEAD_NEUTRAL(new Symbol(4, 2, 3, 1, 2, 1, 12, 2), Arrays.asList(new Integer[] { 2 }),
	FOREHEAD_CONTACT(new Symbol(4, 2, 3, 2, 2, 1, 20, 11), Arrays.asList(new Integer[] { 2 }),
	FOREHEAD_WRINKLED(new Symbol(4, 2, 3, 3, 2, 1, 16, 6), Arrays.asList(new Integer[] { 2 }),
	EYES_OPEN(new Symbol(4, 2, 4, 1, 4, 1, 21, 4), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_SQUEEZED(new Symbol(4, 2, 4, 2, 4, 1, 21, 2), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_CLOSED(new Symbol(4, 2, 4, 3, 4, 1, 21, 4), Arrays.asList(new Integer[] { 4, 5 }),
	EYE_BLINK_SINGLE(new Symbol(4, 2, 4, 4, 4, 1, 11, 4), Arrays.asList(new Integer[] { 4, 5 }),
	EYE_BLINKS_MULTIPLE(new Symbol(4, 2, 4, 5, 4, 1, 9, 4), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_HALF_OPEN(new Symbol(4, 2, 5, 1, 4, 1, 22, 6), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_WIDE_OPEN(new Symbol(4, 2, 5, 2, 4, 1, 22, 8), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_HALF_CLOSED(new Symbol(4, 2, 5, 3, 4, 1, 22, 6), Arrays.asList(new Integer[] { 4, 5 }),
	EYES_WIDENING_MOVEMENT(new Symbol(4, 2, 5, 4, 4, 1, 21, 10), Arrays.asList(new Integer[] { 4, 5 }),
	EYE_WINK_SQUEEZED_EYE_BLINK(new Symbol(4, 2, 5, 5, 4, 1, 26, 9), Arrays.asList(new Integer[] { 4, 5 }),
	EYELASHES_UP(new Symbol(4, 2, 6, 1, 4, 1, 24, 9), Arrays.asList(new Integer[] { 4, 5 }),
	EYELASHES_DOWN(new Symbol(4, 2, 6, 2, 4, 1, 24, 9), Arrays.asList(new Integer[] { 4, 5 }),
	EYELASHES_FLUTTERING(new Symbol(4, 2, 6, 3, 4, 1, 24, 13), Arrays.asList(new Integer[] { 4, 5 }),
	EYEGAZE_STRAIGHT_WALL_PLANE(new Symbol(4, 2, 7, 1, 2, 1, 20, 9), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_WALL_DOUBLE(new Symbol(4, 2, 7, 2, 2, 1, 28, 7), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_WALL_ALTERNATE(new Symbol(4, 2, 7, 3, 2, 1, 28, 8), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_FLOOR_PLANE(new Symbol(4, 2, 8, 1, 2, 1, 18, 9), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_FLOOR_DOUBLE(new Symbol(4, 2, 8, 2, 2, 1, 28, 7), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_STRAIGHT_FLOOR_ALTERNATE(new Symbol(4, 2, 8, 3, 2, 1, 22, 9), Arrays.asList(new Integer[] { 2, 3, 4 }),
	EYEGAZE_CURVED_WALL_PLANE(new Symbol(4, 2, 9, 1, 2, 1, 25, 6), Arrays.asList(new Integer[] { 2, 3 }),
	EYEGAZE_CURVED_FLOOR_PLANE(new Symbol(4, 2, 10, 1, 2, 1, 22, 6), Arrays.asList(new Integer[] { 2, 3 }),
	EYEGAZE_CIRCLES_WALL_PLANE(new Symbol(4, 2, 11, 1, 2, 1, 25, 10), Arrays.asList(new Integer[] { 2, 3 }),
	EXCITEMENT(new Symbol(4, 5, 13, 1, 2, 1, 47, 47), Arrays.asList(new Integer[] { 2, 3, 4 }),
	NOSE_NEUTRAL(new Symbol(4, 3, 4, 1, 2, 1, 2, 12), Arrays.asList(new Integer[] { 2 }),
	NOSE_CONTACT(new Symbol(4, 3, 4, 2, 2, 1, 10, 13), Arrays.asList(new Integer[] { 2 }),
	NOSE_WRINKLES(new Symbol(4, 3, 4, 3, 2, 1, 8, 12), Arrays.asList(new Integer[] { 2 }),
	NOSE_WIGGLES(new Symbol(4, 3, 4, 4, 2, 1, 14, 13), Arrays.asList(new Integer[] { 2 }),
	HAIR(new Symbol(4, 5, 12, 1, 2, 1, 36, 36), Arrays.asList(new Integer[] { 2, 3, 4 }),
	STANDARD(new Symbol(4, 1, 1, 1, 1, 1, 36, 35), Arrays.asList(new Integer[] { 1 }),
	HEAD_RIMS(new Symbol(4, 1, 2, 1, 1, 1, 36, 35), Arrays.asList(new Integer[] { 1 }),
	HEAD_MOVEMENT_STRAIGHT_WALL_PLANE(new Symbol(4, 1, 3, 1, 1, 1, 36, 46),
	HEAD_MOVEMENT_TILTS_WALL_PLANE(new Symbol(4, 1, 4, 1, 1, 1, 36, 45), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	HEAD_MOVEMENT_STRAIGHT_FLOOR_PLANE(new Symbol(4, 1, 5, 1, 1, 1, 36, 46),
	HEAD_MOVEMENT_CURVES_WALL_PLANE(new Symbol(4, 1, 6, 1, 1, 1, 36, 44), Arrays.asList(new Integer[] { 1 }),
	HEAD_MOVEMENT_CURVES_FLOOR_PLANE(new Symbol(4, 1, 7, 1, 1, 1, 36, 42), Arrays.asList(new Integer[] { 1 }),
	HEAD_MOVEMENT_CIRCLES(new Symbol(4, 1, 8, 1, 1, 1, 36, 38), Arrays.asList(new Integer[] { 1 }),
	FACE_DIRECTION_POSITIONS_NOSE_FORWARD_TILTING(new Symbol(4, 1, 9, 1, 1, 1, 36, 35),
	FACE_DIRECTION_POSITIONS_NOSE_UP_OR_DOWN(new Symbol(4, 1, 10, 1, 1, 1, 36, 44), Arrays.asList(new Integer[] { 1 }),
	FACE_DIRECTION_POSITIONS_NOSE_UP_OR_DOWN_TILTING(new Symbol(4, 1, 10, 2, 1, 1, 36, 43),
	TONGUE_MOVES_AGAINST_CHEEK_CHEEK_ITSELF(new Symbol(4, 5, 2, 1, 1, 1, 39, 35), Arrays.asList(new Integer[] { 1, 2 }),
	EARS(new Symbol(4, 3, 3, 1, 1, 1, 48, 35), Arrays.asList(new Integer[] { 4, 5 }),
	LOCATION_SPACE_WALL_PLANE(new Symbol(6, 1, 1, 1, 1, 1, 41, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOCATION_SPACE_FLOOR_PLANE(new Symbol(6, 1, 1, 2, 1, 1, 41, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOCATION_HEIGHT(new Symbol(6, 1, 2, 1, 1, 1, 43, 39), Arrays.asList(new Integer[] { 1, 2 }),
	LOCATION_WIDTH(new Symbol(6, 1, 3, 1, 1, 1, 28, 43), Arrays.asList(new Integer[] { 1 }),
	LOCATION_DEPTH(new Symbol(6, 1, 4, 1, 1, 1, 43, 21), Arrays.asList(new Integer[] { 1 }),
	LOCATION_HEAD_NECK(new Symbol(6, 1, 5, 1, 1, 1, 36, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	LOCATION_TORSO(new Symbol(6, 1, 6, 1, 1, 1, 27, 48), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	LOCATION_LIMBS_DIGITS(new Symbol(6, 1, 7, 1, 1, 1, 27, 37), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	FAST(new Symbol(3, 1, 1, 1, 1, 1, 12, 7), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	SLOW(new Symbol(3, 1, 2, 1, 1, 1, 38, 11), Arrays.asList(new Integer[] { 1 }),
	TENSE(new Symbol(3, 1, 3, 1, 1, 1, 11, 5), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	RELAXED(new Symbol(3, 1, 3, 2, 1, 1, 11, 7), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	SAME_TIME(new Symbol(3, 1, 4, 1, 1, 1, 15, 6), Arrays.asList(new Integer[] { 1 }),
	SAME_TIME_ALTERNATING(new Symbol(3, 1, 4, 2, 1, 1, 15, 11), Arrays.asList(new Integer[] { 1 }),
	EVERY_OTHER_TIME(new Symbol(3, 1, 4, 3, 1, 1, 23, 6), Arrays.asList(new Integer[] { 1 }),
	GRADUAL(new Symbol(3, 1, 4, 4, 1, 1, 15, 14), Arrays.asList(new Integer[] { 1 }),
	TOUCH_SINGLE(new Symbol(2, 1, 1, 1, 1, 1, 10, 11), Arrays.asList(new Integer[] { 1 }),
	TOUCH_MULTIPE(new Symbol(2, 1, 2, 1, 1, 1, 22, 11), Arrays.asList(new Integer[] { 1, 2 }),
	TOUCH_BETWEEN(new Symbol(2, 1, 3, 1, 1, 1, 18, 15), Arrays.asList(new Integer[] { 1, 2 }),
	GRASP_SINGLE(new Symbol(2, 1, 4, 1, 1, 1, 10, 10), Arrays.asList(new Integer[] { 1 }),
	GRASP_MULTIPLE(new Symbol(2, 1, 5, 1, 1, 1, 22, 10), Arrays.asList(new Integer[] { 1, 2 }),
	GRASP_BETWEEN(new Symbol(2, 1, 6, 1, 1, 1, 18, 15), Arrays.asList(new Integer[] { 1, 2 }),
	STRIKE_SINGLE(new Symbol(2, 1, 7, 1, 1, 1, 13, 13), Arrays.asList(new Integer[] { 1 }),
	STRIKE_MULTIPLE(new Symbol(2, 1, 8, 1, 1, 1, 28, 13), Arrays.asList(new Integer[] { 1, 2 }),
	STRIKE_BETWEEN(new Symbol(2, 1, 9, 1, 1, 1, 21, 15), Arrays.asList(new Integer[] { 1, 2 }),
	BRUSH_SINGLE(new Symbol(2, 1, 10, 1, 1, 1, 12, 12), Arrays.asList(new Integer[] { 1 }),
	BRUSH_MULTIPLE(new Symbol(2, 1, 11, 1, 1, 1, 26, 12), Arrays.asList(new Integer[] { 1, 2 }),
	BRUSH_BETWEEN(new Symbol(2, 1, 12, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2 }),
	RUB_SINGLE(new Symbol(2, 1, 13, 1, 1, 1, 13, 14), Arrays.asList(new Integer[] { 1 }),
	RUB_MULTIPLE(new Symbol(2, 1, 14, 1, 1, 1, 28, 14), Arrays.asList(new Integer[] { 1, 2 }),
	RUB_BETWEEN(new Symbol(2, 1, 15, 1, 1, 1, 21, 16), Arrays.asList(new Integer[] { 1, 2 }),
	SURFACE_SYMBOLS(new Symbol(2, 1, 16, 1, 1, 1, 15, 5), Arrays.asList(new Integer[] { 1, 2 }),
	SURFACE_BETWEEN(new Symbol(2, 1, 17, 1, 1, 1, 16, 9), Arrays.asList(new Integer[] { 1, 2 }),
	SQUEEZE_LARGE_SINGLE(new Symbol(2, 2, 1, 1, 1, 1, 8, 8), Arrays.asList(new Integer[] { 1 }),
	SQUEEZE_SMALL_SINGLE(new Symbol(2, 2, 1, 2, 1, 1, 6, 6), Arrays.asList(new Integer[] { 1 }),
	SQUEEZE_LARGE_MULTIPLE(new Symbol(2, 2, 2, 1, 1, 1, 18, 8), Arrays.asList(new Integer[] { 1, 2 }),
	SQUEEZE_SMALL_MULTIPLE(new Symbol(2, 2, 2, 2, 1, 1, 14, 6), Arrays.asList(new Integer[] { 1, 2 }),
	SQUEEZE_SEQUENTIAL(new Symbol(2, 2, 3, 1, 1, 1, 12, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	FLICK_LARGE_SINGLE(new Symbol(2, 2, 4, 1, 1, 1, 8, 8), Arrays.asList(new Integer[] { 1 }),
	FLICK_SMALL_SINGLE(new Symbol(2, 2, 4, 2, 1, 1, 6, 6), Arrays.asList(new Integer[] { 1 }),
	FLICK_LARGE_MULTIPLE(new Symbol(2, 2, 5, 1, 1, 1, 18, 8), Arrays.asList(new Integer[] { 1, 2 }),
	FLICK_SMALL_MULTIPLE(new Symbol(2, 2, 5, 2, 1, 1, 14, 6), Arrays.asList(new Integer[] { 1, 2 }),
	FLICK_SEQUENTIAL(new Symbol(2, 2, 6, 1, 1, 1, 12, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	SQUEEZE_FLICK_ALTERNATING(new Symbol(2, 2, 7, 1, 1, 1, 34, 11), Arrays.asList(new Integer[] { 1, 2 }),
	HINGE_MOVEMENT_UP_DOWN_LARGE(new Symbol(2, 2, 8, 1, 1, 1, 12, 7), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	HINGE_MOVEMENT_UP_DOWN_SMALL(new Symbol(2, 2, 8, 2, 1, 1, 10, 5), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	HINGE_MOVEMENT_UP_SEQUENTIAL(new Symbol(2, 2, 9, 1, 1, 1, 20, 35),
	HINGE_MOVEMENT_DOWN_SEQUENTIAL(new Symbol(2, 2, 9, 2, 1, 1, 20, 35),
	HINGE_MOVEMENT_UP_DOWN_ALTERNATING_LARGE(new Symbol(2, 2, 10, 1, 1, 1, 12, 13),
	HINGE_MOVEMENT_UP_DOWN_ALTERNATING_SMALL(new Symbol(2, 2, 10, 2, 1, 1, 10, 9),
	HINGE_MOVEMENT_SIDE_TO_SIDE_SCISSORS(new Symbol(2, 2, 11, 1, 1, 1, 16, 9),
	FINGER_CONTACT_MOVEMENT_WALL_PLANE(new Symbol(2, 2, 12, 1, 1, 1, 10, 10),
	FINGER_CONTACT_MOVEMENT_FLOOR_PLANE(new Symbol(2, 2, 13, 1, 1, 1, 10, 10),
	SINGLE_STRAIGHT_MOVEMENT_WALL_PLANE_SMALL(new Symbol(2, 3, 1, 1, 1, 1, 13, 15),
	SINGLE_STRAIGHT_MOVEMENT_WALL_PLANE_MEDIUM(new Symbol(2, 3, 1, 2, 1, 1, 16, 30),
	SINGLE_STRAIGHT_MOVEMENT_WALL_PLANE_LARGE(new Symbol(2, 3, 1, 3, 1, 1, 16, 42),
	SINGLE_STRAIGHT_MOVEMENT_WALL_PLANE_LARGEST(new Symbol(2, 3, 1, 4, 1, 1, 16, 50),
	SINGLE_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 1, 5, 1, 1, 17, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DOUBLE_STRAIGHT_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 2, 1, 1, 1, 25, 14), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DOUBLE_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 2, 2, 1, 1, 25, 18), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DOUBLE_ALTERNATING_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 3, 1, 1, 1, 26, 17),
	DOUBLE_ALTERNATING_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 3, 2, 1, 1, 26, 20),
	CROSS_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 4, 1, 1, 1, 30, 26), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPPLE_STRAIGHT_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 5, 1, 1, 1, 37, 14), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPPLE_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 5, 2, 1, 1, 37, 18), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPPLE_ALTERNATING_MOVEMENT_WALL_PLANE(new Symbol(2, 3, 6, 1, 1, 1, 39, 17),
	TRIPPLE_ALTERNATING_WRIST_FLEX_WALL_PLANE(new Symbol(2, 3, 6, 2, 1, 1, 39, 21),
	BLEND_WALL_PLANE_SMALL(new Symbol(2, 3, 7, 1, 1, 1, 17, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BLEND_WALL_PLANE_MEDIUM(new Symbol(2, 3, 7, 2, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BLEND_WALL_PLANE_LARGE(new Symbol(2, 3, 7, 3, 1, 1, 26, 42), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_WALL_PLANE_SMALL(new Symbol(2, 3, 8, 1, 1, 1, 19, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_WALL_PLANE_MEDIUM(new Symbol(2, 3, 8, 2, 1, 1, 23, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_WALL_PLANE_LARGE(new Symbol(2, 3, 8, 3, 1, 1, 27, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_WALL_PLANE_WITH_ROTATION(new Symbol(2, 3, 8, 4, 1, 1, 30, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CHECK_WALL_PLANE_SMALL(new Symbol(2, 3, 9, 1, 1, 1, 21, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CHECK_WALL_PLANE_MEDIUM(new Symbol(2, 3, 9, 2, 1, 1, 26, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CHECK_WALL_PLANE_LARGE(new Symbol(2, 3, 9, 3, 1, 1, 28, 39), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_WALL_PLANE_SMALL(new Symbol(2, 3, 10, 1, 1, 1, 24, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_WALL_PLANE_MEDIUM(new Symbol(2, 3, 10, 2, 1, 1, 29, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_WALL_PLANE_LARGE(new Symbol(2, 3, 10, 3, 1, 1, 33, 33), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_WALL_PLANE_SMALL(new Symbol(2, 3, 11, 1, 1, 1, 18, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_WALL_PLANE_MEDIUM(new Symbol(2, 3, 11, 2, 1, 1, 24, 39), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_WALL_PLANE_LARGE(new Symbol(2, 3, 11, 3, 1, 1, 26, 43), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_WALL_PLANE_SMALL(new Symbol(2, 3, 12, 1, 1, 1, 16, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_WALL_PLANE_MEDIUM(new Symbol(2, 3, 12, 2, 1, 1, 19, 36), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_WALL_PLANE_LARGE(new Symbol(2, 3, 12, 3, 1, 1, 21, 47), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	TRAVEL_ROTATION_SINGLE_WALL_PLANE(new Symbol(2, 3, 13, 1, 1, 1, 22, 26),
	TRAVEL_ROTATION_DOUBLE_WALL_PLANE(new Symbol(2, 3, 14, 1, 1, 1, 22, 35),
	TRAVEL_ROTATION_ALTERNATING_WALL_PLANE(new Symbol(2, 3, 15, 1, 1, 1, 24, 35),
	TRAVEL_ROTATION_SINGLE_FLOOR_PLANE(new Symbol(2, 3, 16, 1, 1, 1, 21, 30),
	TRAVEL_ROTATION_DOUBLE_FLOOR_PLANE(new Symbol(2, 3, 17, 1, 1, 1, 20, 36),
	TRAVEL_ROTATION_ALTERNATING_FLOOR_PLANE(new Symbol(2, 3, 18, 1, 1, 1, 22, 36),
	TRAVEL_SHAKING_WALL_PLANE(new Symbol(2, 3, 19, 1, 1, 1, 18, 33), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRAVEL_ARM_SPIRAL_WALL_PLANE_SINGLE(new Symbol(2, 3, 20, 1, 1, 1, 25, 35), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRAVEL_ARM_SPIRAL_WALL_PLANE_DOUBLE(new Symbol(2, 3, 20, 2, 1, 1, 25, 42), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRAVEL_ARM_SPIRAL_WALL_PLANE_TRIPLE(new Symbol(2, 3, 20, 3, 1, 1, 25, 50), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DIAGONAL_AWAY_MOVEMENT_SMALL(new Symbol(2, 4, 1, 1, 1, 1, 13, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	DIAGONAL_AWAY_MOVEMENT_MEDIUM(new Symbol(2, 4, 1, 2, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	DIAGONAL_AWAY_MOVEMENT_LARGE(new Symbol(2, 4, 1, 3, 1, 1, 16, 42), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	DIAGONAL_AWAY_MOVEMENT_LARGEST(new Symbol(2, 4, 1, 4, 1, 1, 16, 50), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	DIAGONAL_TOWARDS_MOVEMENT_SMALL(new Symbol(2, 4, 2, 1, 1, 1, 14, 23),
	DIAGONAL_TOWARDS_MOVEMENT_MEDIUM(new Symbol(2, 4, 2, 2, 1, 1, 16, 30),
	DIAGONAL_TOWARDS_MOVEMENT_LARGE(new Symbol(2, 4, 2, 3, 1, 1, 16, 42),
	DIAGONAL_TOWARDS_MOVEMENT_LARGEST(new Symbol(2, 4, 2, 4, 1, 1, 16, 50),
	DIAGONAL_BETWEEN_AWAY_SMALL(new Symbol(2, 4, 3, 1, 1, 1, 14, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_AWAY_MEDIUM(new Symbol(2, 4, 3, 2, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_AWAY_LARGE(new Symbol(2, 4, 3, 3, 1, 1, 16, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_AWAY_LARGEST(new Symbol(2, 4, 3, 4, 1, 1, 16, 50), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_TOWARDS_SMALL(new Symbol(2, 4, 4, 1, 1, 1, 14, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_TOWARDS_MEDIUM(new Symbol(2, 4, 4, 2, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_TOWARDS_LARGE(new Symbol(2, 4, 4, 3, 1, 1, 16, 42), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DIAGONAL_BETWEEN_TOWARDS_LARGEST(new Symbol(2, 4, 4, 4, 1, 1, 16, 50), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_SMALL(new Symbol(2, 5, 1, 1, 1, 1, 14, 15),
	SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 1, 2, 1, 1, 16, 30),
	SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_LARGE(new Symbol(2, 5, 1, 3, 1, 1, 16, 42),
	SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_LARGEST(new Symbol(2, 5, 1, 4, 1, 1, 16, 50),
	SINGLE_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 1, 5, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	DOUBLE_STRAIGHT_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 2, 1, 1, 1, 27, 14), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DOUBLE_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 2, 2, 1, 1, 27, 18), Arrays.asList(new Integer[] { 1, 2, 3 }),
	DOUBLE_ALTERNATING_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 3, 1, 1, 1, 27, 15),
	DOUBLE_ALTERNATING_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 3, 2, 1, 1, 27, 19),
	CROSS_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 4, 1, 1, 1, 31, 27), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPLE_STRAIGHT_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 5, 1, 1, 1, 40, 14), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPLE_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 5, 2, 1, 1, 40, 18), Arrays.asList(new Integer[] { 1, 2, 3 }),
	TRIPLE_ALTERNATING_MOVEMENT_FLOOR_PLANE(new Symbol(2, 5, 6, 1, 1, 1, 40, 15),
	TRIPLE_ALTERNATING_WRIST_FLEX_FLOOR_PLANE(new Symbol(2, 5, 6, 2, 1, 1, 40, 19),
	BENT_FLOOR_PLANE(new Symbol(2, 5, 7, 1, 1, 1, 16, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_FLOOR_PLANE_SMALL(new Symbol(2, 5, 8, 1, 1, 1, 18, 17), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 8, 2, 1, 1, 24, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CORNER_FLOOR_PLANE_LARGE(new Symbol(2, 5, 8, 3, 1, 1, 29, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CHECK_FLOOR_PLANE(new Symbol(2, 5, 9, 1, 1, 1, 20, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_FLOOR_PLANE_SMALL(new Symbol(2, 5, 10, 1, 1, 1, 19, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 10, 2, 1, 1, 24, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	BOX_FLOOR_PLANE_LARGE(new Symbol(2, 5, 10, 3, 1, 1, 29, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_FLOOR_PLANE_SMALL(new Symbol(2, 5, 11, 1, 1, 1, 16, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 11, 2, 1, 1, 21, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ZIGZAG_FLOOR_PLANE_LARGE(new Symbol(2, 5, 11, 3, 1, 1, 22, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_FLOOR_PLANE_SMALL(new Symbol(2, 5, 12, 1, 1, 1, 23, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_FLOOR_PLANE_MEDIUM(new Symbol(2, 5, 12, 2, 1, 1, 33, 36), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PEAKS_FLOOR_PLANE_LARGE(new Symbol(2, 5, 12, 3, 1, 1, 35, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	TRAVEL_ROTATION_SINGLE_FLOOR_PLANE_FILLED_ARROW(new Symbol(2, 5, 13, 1, 1, 1, 20, 29),
	TRAVEL_ROTATION_DOUBLE_FLOOR_PLANE_FILLED_ARROW(new Symbol(2, 5, 14, 1, 1, 1, 20, 31),
	TRAVEL_ROTATION_ALTERNATING_FLOOR_PLANE_FILLED_ARROW(new Symbol(2, 5, 15, 1, 1, 1, 22, 31),
	TRAVEL_ROTATION_SINGLE_WALL_PLANE_FILLED_ARROW(new Symbol(2, 5, 16, 1, 1, 1, 22, 28),
	TRAVEL_ROTATION_DOUBLE_WALL_PLANE_FILLED_ARROW(new Symbol(2, 5, 17, 1, 1, 1, 22, 39),
	TRAVEL_ROTATION_ALTERNATING_WALL_PLANE_FILLED_ARROW(new Symbol(2, 5, 18, 1, 1, 1, 25, 39),
	TRAVEL_SHAKING_FLOOR_PLANE(new Symbol(2, 5, 19, 1, 1, 1, 16, 32), Arrays.asList(new Integer[] { 1, 2, 3 }),
	CURVE_WALL_PLANE_QUARTER_SMALL(new Symbol(2, 6, 1, 1, 1, 1, 12, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_WALL_PLANE_QUARTER_MEDIUM(new Symbol(2, 6, 1, 2, 1, 1, 15, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_WALL_PLANE_QUARTER_LARGE(new Symbol(2, 6, 1, 3, 1, 1, 17, 36), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_WALL_PLANE_QUARTER_LARGEST(new Symbol(2, 6, 1, 4, 1, 1, 20, 44), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_WALL_PLANE_HALF_CIRCLE_SMALL(new Symbol(2, 6, 2, 1, 1, 1, 21, 28),
	CURVE_WALL_PLANE_HALF_CIRCLE_MEDIUM(new Symbol(2, 6, 2, 2, 1, 1, 24, 33),
	CURVE_WALL_PLANE_HALF_CIRCLE_LARGE(new Symbol(2, 6, 2, 3, 1, 1, 29, 36),
	CURVE_WALL_PLANE_HALF_CIRCLE_LARGEST(new Symbol(2, 6, 2, 4, 1, 1, 37, 54),
	CURVE_WALL_PLANE_3_QUARTER_CIRCLE_SMALL(new Symbol(2, 6, 3, 1, 1, 1, 23, 27),
	CURVE_WALL_PLANE_3_QUARTER_CIRCLE_MEDIUM(new Symbol(2, 6, 3, 2, 1, 1, 28, 33),
	HUMP_WALL_PLANE_SMALL(new Symbol(2, 6, 4, 1, 1, 1, 14, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_WALL_PLANE_MEDIUM(new Symbol(2, 6, 4, 2, 1, 1, 14, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_WALL_PLANE_LARGE(new Symbol(2, 6, 4, 3, 1, 1, 16, 44), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_WALL_PLANE_SMALL(new Symbol(2, 6, 5, 1, 1, 1, 13, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_WALL_PLANE_MEDIUM(new Symbol(2, 6, 5, 2, 1, 1, 15, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_WALL_PLANE_LARGE(new Symbol(2, 6, 5, 3, 1, 1, 19, 47), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_WALL_PLANE_SMALL_DOUBLE(new Symbol(2, 6, 5, 4, 1, 1, 13, 44), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_2_CURVES_SMALL(new Symbol(2, 6, 6, 1, 1, 1, 14, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_2_CURVES_MEDIUM(new Symbol(2, 6, 6, 2, 1, 1, 15, 35), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_2_CURVES_LARGE(new Symbol(2, 6, 6, 3, 1, 1, 18, 39), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_3_CURVES_SMALL(new Symbol(2, 6, 6, 4, 1, 1, 17, 37), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_3_CURVES_MEDIUM(new Symbol(2, 6, 6, 5, 1, 1, 21, 51), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_WALL_PLANE_3_CURVES_LARGE(new Symbol(2, 6, 6, 6, 1, 1, 30, 51), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_THEN_STRAIGHT_MOVEMENT_WALL_PLANE(new Symbol(2, 6, 7, 1, 1, 1, 19, 33),
	CURVED_CROSS_MOVEMENT_WALL_SMALL(new Symbol(2, 6, 7, 2, 1, 1, 21, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVED_CROSS_MOVEMENT_WALL_MEDIUM(new Symbol(2, 6, 7, 3, 1, 1, 27, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ROTATION_SINGLE_WALL_PLANE(new Symbol(2, 6, 8, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_DOUBLE_WALL_PLANE(new Symbol(2, 6, 9, 1, 1, 1, 23, 36), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_ALTERNATE_WALL_PLANE(new Symbol(2, 6, 10, 1, 1, 1, 25, 36),
	SHAKING_WALL_PLANE(new Symbol(2, 6, 11, 1, 1, 1, 21, 33), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	CURVE_HITS_FRONT_WALL(new Symbol(2, 7, 1, 1, 1, 1, 17, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	HUMP_HITS_FRONT_WALL(new Symbol(2, 7, 2, 1, 1, 1, 18, 35), Arrays.asList(new Integer[] { 1, 2, 3 }),
	LOOP_HITS_FRONT_WALL(new Symbol(2, 7, 3, 1, 1, 1, 24, 47), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_HITS_FRONT_WALL(new Symbol(2, 7, 4, 1, 1, 1, 17, 31), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_SINGLE_HITS_FRONT_WALL(new Symbol(2, 7, 5, 1, 1, 1, 28, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_DOUBLE_HITS_FRONT_WALL(new Symbol(2, 7, 6, 1, 1, 1, 36, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_ALTERNATING_HITS_FRONT_WALL(new Symbol(2, 7, 7, 1, 1, 1, 40, 25), Arrays.asList(new Integer[] { 1, 2, 3 }),
	CURVE_HITS_CHEST(new Symbol(2, 7, 9, 1, 1, 1, 13, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	HUMP_HITS_CHEST(new Symbol(2, 7, 10, 1, 1, 1, 13, 36), Arrays.asList(new Integer[] { 1, 2, 3 }),
	LOOP_HITS_CHEST(new Symbol(2, 7, 11, 1, 1, 1, 20, 47), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_HITS_CHEST(new Symbol(2, 7, 12, 1, 1, 1, 19, 36), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_SINGLE_HITS_CHEST(new Symbol(2, 7, 13, 1, 1, 1, 28, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_DOUBLE_HITS_CHEST(new Symbol(2, 7, 14, 1, 1, 1, 36, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ROTATION_ALTERNATIVE_HITS_CHEST(new Symbol(2, 7, 15, 1, 1, 1, 40, 25), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_DIAGONAL_PATH_SMALL(new Symbol(2, 7, 16, 1, 1, 1, 22, 37), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_DIAGONAL_PATH_MEDIUM(new Symbol(2, 7, 16, 2, 1, 1, 26, 51), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WAVE_DIAGONAL_PATH_LARGE(new Symbol(2, 7, 16, 3, 1, 1, 38, 51), Arrays.asList(new Integer[] { 1, 2, 3 }),
	CURVE_HITS_CEILING_SMALL(new Symbol(2, 8, 1, 1, 1, 1, 19, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	CURVE_HITS_CEILING_LARGE(new Symbol(2, 8, 1, 2, 1, 1, 23, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	HUMP_HITS_CEILING_2_HUMPS_SMALL(new Symbol(2, 8, 2, 1, 1, 1, 26, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_CEILING_2_HUMPS_LARGE(new Symbol(2, 8, 2, 2, 1, 1, 31, 33), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_CEILING_3_HUMPS_SMALL(new Symbol(2, 8, 2, 3, 1, 1, 33, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_CEILING_3_HUMPS_LARGE(new Symbol(2, 8, 2, 4, 1, 1, 38, 41), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_CEILING_SMALL_SINGLE(new Symbol(2, 8, 3, 1, 1, 1, 19, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_CEILING_LARGE_SINGLE(new Symbol(2, 8, 3, 2, 1, 1, 22, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_CEILING_SMALL_DOUBLE(new Symbol(2, 8, 3, 3, 1, 1, 19, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_CEILING_LARGE_DOUBLE(new Symbol(2, 8, 3, 4, 1, 1, 22, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_HITS_CEILING_SMALL(new Symbol(2, 8, 4, 1, 1, 1, 23, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_HITS_CEILING_LARGE(new Symbol(2, 8, 4, 2, 1, 1, 33, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ROTATION_SINGLE_HITS_CEILING(new Symbol(2, 8, 5, 1, 1, 1, 26, 23),
	ROTATION_DOUBLE_HITS_CEILING(new Symbol(2, 8, 6, 1, 1, 1, 40, 23),
	ROTATION_ALTERNATING_HITS_CEILING(new Symbol(2, 8, 7, 1, 1, 1, 40, 24),
	CURVE_HITS_FLOOR_SMALL(new Symbol(2, 8, 8, 1, 1, 1, 19, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	CURVE_HITS_FLOOR_LARGE(new Symbol(2, 8, 8, 2, 1, 1, 23, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	HUMP_HITS_FLOOR_2_HUMPS_SMALL(new Symbol(2, 8, 9, 1, 1, 1, 23, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_FLOOR_2_HUMPS_LARGE(new Symbol(2, 8, 9, 2, 1, 1, 31, 33), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_FLOOR_3_HUMPS_SMALL(new Symbol(2, 8, 9, 3, 1, 1, 29, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_HITS_FLOOR_3_HUMPS_LARGE(new Symbol(2, 8, 9, 4, 1, 1, 39, 43), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_FLOOR_SMALL_SINGLE(new Symbol(2, 8, 10, 1, 1, 1, 19, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_FLOOR_LARGE_SINGLE(new Symbol(2, 8, 10, 2, 1, 1, 22, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_FLOOR_SMALL_DOUBLE(new Symbol(2, 8, 10, 3, 1, 1, 20, 34), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_HITS_FLOOR_LARGE_DOUBLE(new Symbol(2, 8, 10, 4, 1, 1, 22, 40), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_HITS_FLOOR_SMALL(new Symbol(2, 8, 11, 1, 1, 1, 24, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_HITS_FLOOR_LARGE(new Symbol(2, 8, 11, 2, 1, 1, 36, 39), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ROTATION_SINGLE_HITS_FLOOR(new Symbol(2, 8, 12, 1, 1, 1, 26, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_DOUBLE_HITS_FLOOR(new Symbol(2, 8, 13, 1, 1, 1, 39, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_ALTERNATING_HITS_FLOOR(new Symbol(2, 8, 14, 1, 1, 1, 43, 23),
	CURVE_FLOOR_PLANE_SMALL(new Symbol(2, 9, 1, 1, 1, 1, 22, 9), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_FLOOR_PLANE_MEDIUM_1(new Symbol(2, 9, 1, 2, 1, 1, 29, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_FLOOR_PLANE_MEDIUM_2(new Symbol(2, 9, 1, 3, 1, 1, 39, 14), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_FLOOR_PLANE_LARGE(new Symbol(2, 9, 1, 4, 1, 1, 46, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	CURVE_FLOOR_PLANE_COMBINED(new Symbol(2, 9, 1, 5, 1, 1, 38, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	HUMP_FLOOR_PLANE_SMALL(new Symbol(2, 9, 2, 1, 1, 1, 40, 11), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	LOOP_FLOOR_PLANE_SMALL(new Symbol(2, 9, 3, 1, 1, 1, 40, 11), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_FLOOR_PLANE_SNAKE(new Symbol(2, 9, 4, 1, 1, 1, 49, 13), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_FLOOR_PLANE_SMALL(new Symbol(2, 9, 4, 2, 1, 1, 42, 16), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	WAVE_FLOOR_PLANE_LARGE(new Symbol(2, 9, 4, 3, 1, 1, 50, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	ROTATION_SINGLE_FLOOR_PLANE(new Symbol(2, 9, 5, 1, 1, 1, 21, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_DOUBLE_FLOOR_PLANE(new Symbol(2, 9, 6, 1, 1, 1, 21, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ROTATION_ALTERNATING_FLOOR_PLANE(new Symbol(2, 9, 7, 1, 1, 1, 23, 29),
	SHAKING_PARALLEL_FLOOR(new Symbol(2, 9, 8, 1, 1, 1, 20, 32), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	ARM_CIRCLE_WALL_SMALL_SINGLE(new Symbol(2, 10, 1, 1, 1, 1, 23, 27), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ARM_CIRCLE_WALL_MEDIUM_SINGLE(new Symbol(2, 10, 1, 2, 1, 1, 29, 33), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ARM_CIRCLE_WALL_SMALL_DOUBLE(new Symbol(2, 10, 2, 1, 1, 1, 23, 27), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ARM_CIRCLE_WALL_MEDIUM_DOUBLE(new Symbol(2, 10, 2, 2, 1, 1, 29, 33), Arrays.asList(new Integer[] { 1, 2, 3 }),
	ARM_CIRCLE_HITS_WALL_SMALL_SINGLE(new Symbol(2, 10, 3, 1, 1, 1, 15, 25),
	ARM_CIRCLE_HITS_WALL_MEDIUM_SINGLE(new Symbol(2, 10, 3, 2, 1, 1, 15, 32),
	ARM_CIRCLE_HITS_WALL_LARGE_SINGLE(new Symbol(2, 10, 3, 3, 1, 1, 15, 40),
	ARM_CIRCLE_HITS_WALL_SMALL_DOUBLE(new Symbol(2, 10, 4, 1, 1, 1, 15, 25),
	ARM_CIRCLE_HITS_WALL_MEDIUM_DOUBLE(new Symbol(2, 10, 4, 2, 1, 1, 15, 32),
	ARM_CIRCLE_HITS_WALL_LARGE_DOUBLE(new Symbol(2, 10, 4, 3, 1, 1, 15, 40),
	WRIST_CIRCLE_FRONT_WALL_SINGLE(new Symbol(2, 10, 5, 1, 1, 1, 17, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WRIST_CIRCLE_FRONT_WALL_DOUBLE(new Symbol(2, 10, 5, 2, 1, 1, 21, 23), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WRIST_CIRCLE_HITS_WALL_SINGLE(new Symbol(2, 10, 6, 1, 1, 1, 18, 20), Arrays.asList(new Integer[] { 1, 2, 3 }),
	WRIST_CIRCLE_HITS_WALL_DOUBLE(new Symbol(2, 10, 6, 2, 1, 1, 21, 20), Arrays.asList(new Integer[] { 1, 2, 3 }),
	FINGER_CIRCLES_WALL_SINGLE(new Symbol(2, 10, 7, 1, 1, 1, 16, 17), Arrays.asList(new Integer[] { 1, 2 }),
	FINGER_CIRCLES_WALL_DOUBLE(new Symbol(2, 10, 7, 2, 1, 1, 16, 17), Arrays.asList(new Integer[] { 1, 2 }),
	FINGER_CIRCLES_HITS_WALL_SINGLE(new Symbol(2, 10, 7, 3, 1, 1, 9, 22), Arrays.asList(new Integer[] { 1, 2 }),
	FINGER_CIRCLES_HITS_WALL_DOUBLE(new Symbol(2, 10, 7, 4, 1, 1, 10, 22), Arrays.asList(new Integer[] { 1, 2 }),
	ARROWHEADS_SMALL(new Symbol(2, 10, 8, 1, 1, 1, 13, 7), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	ARROWHEADS_LARGE(new Symbol(2, 10, 8, 2, 1, 1, 16, 8), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	SHOULDER_HIP_SPINE(new Symbol(5, 1, 1, 1, 1, 1, 42, 4), Arrays.asList(new Integer[] { 1, 2, 3 }),
	SHOULDER_HIP_POSITIONS(new Symbol(5, 1, 2, 1, 1, 1, 46, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5 }),
	SHOULDER_HIP_MOVE_WALL_PLANE(new Symbol(5, 1, 3, 1, 1, 1, 54, 10),
	SHOULDER_HIP_MOVE_FLOOR_PLANE(new Symbol(5, 1, 4, 1, 1, 1, 53, 10),
	SHOULDER_TILTS(new Symbol(5, 1, 5, 1, 1, 1, 50, 11), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	TORSO_STRAIGHT_STRETCH_WALL(new Symbol(5, 1, 6, 1, 1, 1, 42, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	TORSO_CURVED_BLEND_WALL(new Symbol(5, 1, 7, 1, 1, 1, 42, 14), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	TORSO_TWIST_FLOOR_PLANE(new Symbol(5, 1, 8, 1, 1, 1, 42, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	UPPER_BODY_TILTS(new Symbol(5, 1, 9, 1, 1, 1, 36, 48), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	LIMB_COMBINATIONS(new Symbol(5, 2, 1, 1, 1, 1, 24, 23), Arrays.asList(new Integer[] { 1 }),
	LIMB_LENGTH_1(new Symbol(5, 2, 2, 1, 1, 1, 2, 25), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_2(new Symbol(5, 2, 2, 2, 1, 1, 2, 32), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_3(new Symbol(5, 2, 2, 3, 1, 1, 2, 40), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_4(new Symbol(5, 2, 2, 4, 1, 1, 2, 48), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_5(new Symbol(5, 2, 3, 1, 1, 1, 2, 16), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_6(new Symbol(5, 2, 3, 2, 1, 1, 2, 12), Arrays.asList(new Integer[] { 1, 2 }),
	LIMB_LENGTH_7(new Symbol(5, 2, 3, 3, 1, 1, 2, 8), Arrays.asList(new Integer[] { 1, 2 }),
	FINGERS(new Symbol(5, 2, 4, 1, 1, 1, 9, 14), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	HEAD_WITH_SHOULDERS_OR_NOSE(new Symbol(4, 1, 1, 1, 3, 1, 48, 35), Arrays.asList(new Integer[] { 2, 3, 4 }),
	BREATH_EXHALE(new Symbol(4, 3, 7, 1, 4, 1, 7, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	BREATH_INHALE(new Symbol(4, 3, 7, 2, 4, 1, 7, 12), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 }),
	COMMA(new Symbol(7, 1, 1, 1, 1, 1, 74, 8), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	PERIOD(new Symbol(7, 1, 1, 2, 1, 1, 72, 8), Arrays.asList(new Integer[] { 1, 2, 3, 4 }),
	SEMICOLON(new Symbol(7, 1, 2, 1, 1, 1, 72, 14), Arrays.asList(new Integer[] { 1 }),
	COLON(new Symbol(7, 1, 2, 2, 1, 1, 72, 21), Arrays.asList(new Integer[] { 1 }),
	PARENTHESES(new Symbol(7, 1, 3, 1, 1, 1, 60, 15), Arrays.asList(new Integer[] { 1 }),
	INDEX(new Symbol(1, 1, 1, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_CIRCLE(new Symbol(1, 1, 2, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_CUP(new Symbol(1, 1, 3, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_OVAL(new Symbol(1, 1, 4, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_HINGE(new Symbol(1, 1, 5, 1, 1, 1, 22, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_ON_ANGLE(new Symbol(1, 1, 6, 1, 1, 1, 22, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_BENT(new Symbol(1, 1, 7, 1, 1, 1, 15, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_BENT_ON_CIRCLE(new Symbol(1, 1, 8, 1, 1, 1, 16, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_BENT_ON_FIRST_THUMB_UNDER(new Symbol(1, 1, 9, 1, 1, 1, 15, 26),
	INDEX_RAISED_KNUCKLE(new Symbol(1, 1, 10, 1, 1, 1, 15, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_CUP(new Symbol(1, 1, 11, 1, 1, 1, 15, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_HINGE_ON_FIST(new Symbol(1, 1, 12, 1, 1, 1, 17, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_HINGE_ON_FIST_LOW(new Symbol(1, 1, 13, 1, 1, 1, 17, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_HINGE_ON_CIRCLE(new Symbol(1, 1, 14, 1, 1, 1, 18, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE(new Symbol(1, 2, 1, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_ON_CIRCLE(new Symbol(1, 2, 2, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_BENT(new Symbol(1, 2, 3, 1, 1, 1, 15, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RAISED_KNUCKLES(new Symbol(1, 2, 4, 1, 1, 1, 15, 20),
	INDEX_MIDDLE_HINGE(new Symbol(1, 2, 5, 1, 1, 1, 19, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_UP_MIDDLE_HINGE(new Symbol(1, 2, 6, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_HINGE_MIDDLE_UP(new Symbol(1, 2, 7, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_UNIT(new Symbol(1, 2, 8, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_UNIT_INDEX_BENT(new Symbol(1, 2, 9, 1, 1, 1, 15, 32),
	INDEX_MIDDLE_UNIT_MIDDLE_BENT(new Symbol(1, 2, 10, 1, 1, 1, 15, 32),
	INDEX_MIDDLE_UNIT_CUP(new Symbol(1, 2, 11, 1, 1, 1, 15, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_UNIT_HINGE(new Symbol(1, 2, 12, 1, 1, 1, 17, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_CROSS(new Symbol(1, 2, 13, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_CROSS_ON_CIRCLE(new Symbol(1, 2, 14, 1, 1, 1, 16, 30),
	MIDDLE_BENT_OVER_INDEX(new Symbol(1, 2, 15, 1, 1, 1, 15, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_BENT_OVER_MIDDLE(new Symbol(1, 2, 16, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB(new Symbol(1, 3, 1, 1, 1, 1, 23, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB_ON_CIRCLE(new Symbol(1, 3, 2, 1, 1, 1, 24, 30),
	INDEX_MIDDLE_STRAIGHT_THUMB_BENT(new Symbol(1, 3, 3, 1, 1, 1, 22, 30),
	INDEX_MIDDLE_BENT_THUMB_STRAIGHT(new Symbol(1, 3, 4, 1, 1, 1, 24, 27),
	INDEX_MIDDLE_THUMB_BENT(new Symbol(1, 3, 5, 1, 1, 1, 22, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_HINGE_SPREAD_THUMB_SIDE(new Symbol(1, 3, 6, 1, 1, 1, 23, 23),
	INDEX_UP_MIDDLE_HINGE_THUMB_SIDE(new Symbol(1, 3, 7, 1, 1, 1, 23, 30),
	INDEX_UP_MIDDLE_HINGE_THUMB_UNIT(new Symbol(1, 3, 8, 1, 1, 1, 18, 30),
	INDEX_HINGE_MIDDLE_UP_THUMB_SIDE(new Symbol(1, 3, 9, 1, 1, 1, 23, 30),
	INDEX_MIDDLE_UP_SPREAD_THUMB_FORWARD(new Symbol(1, 3, 10, 1, 1, 1, 15, 30),
	INDEX_MIDDLE_THUMB_CUP(new Symbol(1, 3, 11, 1, 1, 1, 23, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB_CIRCLE(new Symbol(1, 3, 12, 1, 1, 1, 24, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB_HOOK(new Symbol(1, 3, 13, 1, 1, 1, 25, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_THUMB_HINGE(new Symbol(1, 3, 14, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_BETWEEN_INDEX_MIDDLE_STRAIGHT(new Symbol(1, 3, 15, 1, 1, 1, 30, 19),
	INDEX_MIDDLE_UNIT_THUMB_SIDE(new Symbol(1, 3, 16, 1, 1, 1, 23, 30),
	INDEX_MIDDLE_UNIT_THUMB_SIDE_UNIT(new Symbol(1, 3, 17, 1, 1, 1, 18, 30),
	INDEX_MIDDLE_UNIT_THUMB_SIDE_BENT(new Symbol(1, 3, 18, 1, 1, 1, 22, 30),
	MIDDLE_THUMB_HOOK_INDEX_UP(new Symbol(1, 3, 19, 1, 1, 1, 18, 32),
	INDEX_THUMB_HOOK_MIDDLE_UP(new Symbol(1, 3, 20, 1, 1, 1, 21, 30),
	INDEX_MIDDLE_UNIT_HINGE_THUMB_SIDE(new Symbol(1, 3, 21, 1, 1, 1, 24, 25),
	INDEX_MIDDLE_CROSS_THUMB_SIDE(new Symbol(1, 3, 22, 1, 1, 1, 22, 30),
	INDEX_MIDDLE_UNIT_THUMB_FORWARD(new Symbol(1, 3, 23, 1, 1, 1, 15, 30),
	INDEX_MIDDLE_UNIT_CUP_THUMB_FORWARD(new Symbol(1, 3, 24, 1, 1, 1, 24, 25),
	MIDDLE_THUMB_CUP_INDEX_UP(new Symbol(1, 3, 25, 1, 1, 1, 23, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CUP_MIDDLE_UP(new Symbol(1, 3, 26, 1, 1, 1, 23, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_THUMB_CIRCLE_INDEX_UP(new Symbol(1, 3, 27, 1, 1, 1, 24, 30),
	MIDDLE_THUMB_CIRCLE_INDEX_HINGE(new Symbol(1, 3, 28, 1, 1, 1, 24, 25),
	INDEX_THUMB_ANGLE_OUT_MIDDLE_UP(new Symbol(1, 3, 29, 1, 1, 1, 24, 30),
	INDEX_THUMB_ANGLE_IN_MIDDLE_UP(new Symbol(1, 3, 30, 1, 1, 1, 23, 30),
	INDEX_THUMB_CIRCLE_MIDDLE_UP(new Symbol(1, 3, 31, 1, 1, 1, 24, 30),
	INDEX_MIDDLE_THUMB_UNIT_HINGE(new Symbol(1, 3, 32, 1, 1, 1, 29, 15),
	INDEX_MIDDLE_THUMB_ANGLE_OUT(new Symbol(1, 3, 33, 1, 1, 1, 29, 19),
	INDEX_MIDDLE_THUMB_ANGLE(new Symbol(1, 3, 34, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_THUMB_ANGLE_OUT_INDEX_UP(new Symbol(1, 3, 35, 1, 1, 1, 29, 30),
	MIDDLE_THUMB_ANGLE_OUT_INDEX_CROSSED(new Symbol(1, 3, 36, 1, 1, 1, 29, 21),
	MIDDLE_THUMB_ANGLE_INDEX_UP(new Symbol(1, 3, 37, 1, 1, 1, 29, 30),
	INDEX_THUMB_HOOK_MIDDLE_HINGE(new Symbol(1, 3, 38, 1, 1, 1, 29, 24),
	FOUR_FINGERS(new Symbol(1, 4, 1, 1, 1, 1, 22, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_BENT(new Symbol(1, 4, 2, 1, 1, 1, 23, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_HINGE(new Symbol(1, 4, 3, 1, 1, 1, 18, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT(new Symbol(1, 4, 4, 1, 1, 1, 14, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT_SPLIT(new Symbol(1, 4, 5, 1, 1, 1, 14, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT_CLAW(new Symbol(1, 4, 6, 1, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT_BENT(new Symbol(1, 4, 7, 1, 1, 1, 15, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FOUR_FINGERS_UNIT_HINGE(new Symbol(1, 4, 8, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD(new Symbol(1, 5, 1, 1, 1, 1, 23, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_HEEL(new Symbol(1, 5, 2, 1, 2, 1, 30, 18), Arrays.asList(new Integer[] { 2 })), //
	FIVE_FINGERS_SPREAD_FOUR_BENT(new Symbol(1, 5, 3, 1, 1, 1, 25, 31),
	FIVE_FINGERS_SPREAD_FOUR_BENT_HEEL(new Symbol(1, 5, 4, 1, 2, 1, 30, 16), Arrays.asList(new Integer[] { 2 })), //
	FIVE_FINGERS_SPREAD_BENT(new Symbol(1, 5, 5, 1, 1, 1, 25, 31), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_BENT_HEEL(new Symbol(1, 5, 6, 1, 2, 1, 29, 16), Arrays.asList(new Integer[] { 2 })), //
	FIVE_FINGERS_SPREAD_THUMB_FORWARD(new Symbol(1, 5, 7, 1, 1, 1, 20, 31),
	FIVE_FINGERS_SPREAD_CUP(new Symbol(1, 5, 8, 1, 1, 1, 15, 25), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_CUP_OPEN(new Symbol(1, 5, 9, 1, 1, 1, 15, 25),
	FIVE_FINGERS_SPREAD_HINGE_OPEN(new Symbol(1, 5, 10, 1, 1, 1, 15, 26),
	FIVE_FINGERS_SPREAD_OVAL(new Symbol(1, 5, 11, 1, 1, 1, 16, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_HINGE(new Symbol(1, 5, 12, 1, 1, 1, 18, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIVE_FINGERS_SPREAD_HINGE_THUMB_SIDE(new Symbol(1, 5, 13, 1, 1, 1, 26, 26),
	FIVE_FINGERS_SPREAD_HINGE_NO_THUMB(new Symbol(1, 5, 14, 1, 1, 1, 18, 26),
	FLAT(new Symbol(1, 5, 15, 1, 1, 1, 12, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_BETWEEN_PALM_FACINGS(new Symbol(1, 5, 16, 1, 1, 1, 12, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4 })), //
	FLAT_HEEL(new Symbol(1, 5, 17, 1, 2, 1, 20, 9), Arrays.asList(new Integer[] { 2 })), //
	FLAT_THUMB_SIDE(new Symbol(1, 5, 18, 1, 1, 1, 19, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_THUMB_SIDE_HEEL(new Symbol(1, 5, 19, 1, 2, 1, 27, 10), Arrays.asList(new Integer[] { 2 })), //
	FLAT_THUMB_BENT(new Symbol(1, 5, 20, 1, 1, 1, 20, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_THUMB_FORWARD(new Symbol(1, 5, 21, 1, 1, 1, 12, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_SPLIT_INDEX_THUMB_SIDE(new Symbol(1, 5, 22, 1, 1, 1, 20, 29),
	FLAT_SPLIT_CENTER(new Symbol(1, 5, 23, 1, 1, 1, 12, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FLAT_SPLIT_CENTER_THUMB_SIDE(new Symbol(1, 5, 24, 1, 1, 1, 20, 27),
	FLAT_SPLIT_CENTER_THUMB_SID_BENT(new Symbol(1, 5, 25, 1, 1, 1, 20, 27),
	FLAT_SPLIT_BABY(new Symbol(1, 5, 26, 1, 1, 1, 19, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CLAW(new Symbol(1, 5, 27, 1, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CLAW_THUMB_SIDE(new Symbol(1, 5, 28, 1, 1, 1, 23, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CLAW_NO_THUMB(new Symbol(1, 5, 29, 1, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CLAW_THUMB_FORWARD(new Symbol(1, 5, 30, 1, 1, 1, 19, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HOOK_CURLICUE(new Symbol(1, 5, 31, 1, 1, 1, 20, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HOOK(new Symbol(1, 5, 32, 1, 1, 1, 16, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_OPEN(new Symbol(1, 5, 33, 1, 1, 1, 20, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP(new Symbol(1, 5, 34, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_OPEN_THUMB_SIDE(new Symbol(1, 5, 35, 1, 1, 1, 23, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_THUMB_SIDE(new Symbol(1, 5, 36, 1, 1, 1, 24, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_OPEN_NO_THUMB(new Symbol(1, 5, 37, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_NO_THUMB(new Symbol(1, 5, 38, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_OPEN_THUMB_FORWARD(new Symbol(1, 5, 39, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CUP_THUMB_FORWARD(new Symbol(1, 5, 40, 1, 1, 1, 17, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CURLICUE_OPEN(new Symbol(1, 5, 41, 1, 1, 1, 21, 16), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CURLICUE(new Symbol(1, 5, 42, 1, 1, 1, 21, 17), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	CIRCLE(new Symbol(1, 5, 43, 1, 1, 1, 16, 16), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	OVAL(new Symbol(1, 5, 44, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	OVAL_THUMB_SIDE(new Symbol(1, 5, 45, 1, 1, 1, 26, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	OVAL_NO_THUMB(new Symbol(1, 5, 46, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	OVAL_THUMB_FORWARD(new Symbol(1, 5, 47, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_OPEN(new Symbol(1, 5, 48, 1, 1, 1, 17, 27), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_OPEN_THUMB_FORWARD(new Symbol(1, 5, 49, 1, 1, 1, 17, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE(new Symbol(1, 5, 50, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_SMALL(new Symbol(1, 5, 51, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_OPEN_THUMB_SIDE(new Symbol(1, 5, 52, 1, 1, 1, 15, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_THUMB_SIDE(new Symbol(1, 5, 53, 1, 1, 1, 30, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_OPEN_NO_THUMB(new Symbol(1, 5, 54, 1, 1, 1, 12, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_NO_THUMB(new Symbol(1, 5, 55, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	HINGE_THUMB_SIDE_TOUCHES_INDEX(new Symbol(1, 5, 56, 1, 1, 1, 24, 19),
	HINGE_THUMB_BETWEEN_MIDDLE_RING(new Symbol(1, 5, 57, 1, 1, 1, 24, 18),
	ANGLE(new Symbol(1, 5, 58, 1, 1, 1, 24, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING(new Symbol(1, 6, 1, 1, 1, 1, 18, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_ON_CIRCLE(new Symbol(1, 6, 2, 1, 1, 1, 18, 29),
	INDEX_MIDDLE_RING_ON_HINGE(new Symbol(1, 6, 3, 1, 1, 1, 20, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_ON_ANGLE(new Symbol(1, 6, 4, 1, 1, 1, 19, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_HINGE(new Symbol(1, 6, 5, 1, 1, 1, 23, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_BENT(new Symbol(1, 6, 6, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_UNIT(new Symbol(1, 6, 7, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_RING_UNIT_HINGE(new Symbol(1, 6, 8, 1, 1, 1, 20, 25),
	BABY_DOWN(new Symbol(1, 6, 9, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_DOWN_RIPPLE_STRAIGHT(new Symbol(1, 6, 10, 1, 1, 1, 21, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_DOWN_RIPPLE_CURVED(new Symbol(1, 6, 11, 1, 1, 1, 23, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_DOWN_OTHERS_CIRCLE(new Symbol(1, 6, 12, 1, 1, 1, 24, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_UP(new Symbol(1, 6, 13, 1, 1, 1, 21, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_UP_ON_FIRST_THUMB_UNDER(new Symbol(1, 6, 14, 1, 1, 1, 21, 19),
	BABY_UP_ON_CIRCLE(new Symbol(1, 6, 15, 1, 1, 1, 21, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_UP_ON_OVAL(new Symbol(1, 6, 16, 1, 1, 1, 20, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_UP_ON_ANGLE(new Symbol(1, 6, 17, 1, 1, 1, 23, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_RAISED_KNUCKLE(new Symbol(1, 6, 18, 1, 1, 1, 18, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_BENT(new Symbol(1, 6, 19, 1, 1, 1, 19, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_THOUCHES_THUMB(new Symbol(1, 6, 20, 1, 1, 1, 22, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_THUMB(new Symbol(1, 6, 21, 1, 1, 1, 28, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_THUMB_ON_HINGE(new Symbol(1, 6, 22, 1, 1, 1, 30, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_THUMB(new Symbol(1, 6, 23, 1, 1, 1, 28, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_THUMB_ON_HINGE(new Symbol(1, 6, 24, 1, 1, 1, 29, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_THUMB_INDEX_THUMB_ANGLE_OUT(new Symbol(1, 6, 25, 1, 1, 1, 30, 23),
	BABY_INDEX_THUMB_INDEX_THUMB_ANGLE(new Symbol(1, 6, 26, 1, 1, 1, 29, 23),
	BABY_INDEX(new Symbol(1, 6, 27, 1, 1, 1, 20, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_ON_CIRCLE(new Symbol(1, 6, 28, 1, 1, 1, 21, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_ON_HINGE(new Symbol(1, 6, 29, 1, 1, 1, 23, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	BABY_INDEX_ON_ANGLE(new Symbol(1, 6, 30, 1, 1, 1, 23, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_BABY(new Symbol(1, 7, 1, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_BABY_ON_CIRCLE(new Symbol(1, 7, 2, 1, 1, 1, 21, 28),
	INDEX_MIDDLE_BABY_ON_HINGE(new Symbol(1, 7, 3, 1, 1, 1, 18, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_HINGE(new Symbol(1, 7, 4, 1, 1, 1, 25, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_BABY_ON_ANGLE(new Symbol(1, 7, 5, 1, 1, 1, 18, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_MIDDLE_CROSS_WITH_BABY(new Symbol(1, 7, 6, 1, 1, 1, 20, 30),
	INDEX_MIDDLE_CROSS_WITH_BABY_ON_CIRCLE(new Symbol(1, 7, 7, 1, 1, 1, 21, 30),
	RING_DOWN(new Symbol(1, 7, 8, 1, 1, 1, 25, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_DOWN_INDEX_THUMB_HOOK_MIDDLE_HINGE(new Symbol(1, 7, 9, 1, 1, 1, 34, 24),
	RING_DOWN_MIDDLE_THUMB_ANGLE_INDEX_CROSS(new Symbol(1, 7, 10, 1, 1, 1, 34, 21),
	RING_UP(new Symbol(1, 7, 11, 1, 1, 1, 16, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_RAISED_KNUCKLE(new Symbol(1, 7, 12, 1, 1, 1, 15, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_BABY(new Symbol(1, 7, 13, 1, 1, 1, 20, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_BABY_ON_CIRCLE(new Symbol(1, 7, 14, 1, 1, 1, 21, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_BABY_ON_OVAL(new Symbol(1, 7, 15, 1, 1, 1, 20, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_BABY_ON_ANGLE(new Symbol(1, 7, 16, 1, 1, 1, 23, 26), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_MIDDLE(new Symbol(1, 7, 17, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_MIDDLE_UNIT(new Symbol(1, 7, 18, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_MIDDLE_RAISED_KNUCKLES(new Symbol(1, 7, 19, 1, 1, 1, 15, 20),
	RING_INDEX(new Symbol(1, 7, 20, 1, 1, 1, 16, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_THUMB(new Symbol(1, 7, 21, 1, 1, 1, 23, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	RING_THUMB_HOOK(new Symbol(1, 7, 22, 1, 1, 1, 15, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY(new Symbol(1, 8, 1, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_CIRCLE(new Symbol(1, 8, 2, 1, 1, 1, 21, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_CURLICUE(new Symbol(1, 8, 3, 1, 1, 1, 21, 29),
	INDEX_RING_BABY_ON_HOOK_OUT(new Symbol(1, 8, 4, 1, 1, 1, 17, 30),
	INDEX_RING_BABY_ON_HOOK_IN(new Symbol(1, 8, 5, 1, 1, 1, 17, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_HOOK_UNDER(new Symbol(1, 8, 6, 1, 1, 1, 17, 30),
	INDEX_RING_BABY_ON_CUP(new Symbol(1, 8, 7, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_HINGE(new Symbol(1, 8, 8, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_RING_BABY_ON_ANGLE_OUT(new Symbol(1, 8, 9, 1, 1, 1, 23, 28),
	INDEX_RING_BABY_ON_ANGLE(new Symbol(1, 8, 10, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_DOWN(new Symbol(1, 8, 11, 1, 1, 1, 25, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_HINGE(new Symbol(1, 8, 12, 1, 1, 1, 30, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_UP(new Symbol(1, 8, 13, 1, 1, 1, 15, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_UP_ON_CIRCLE(new Symbol(1, 8, 14, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RAISED_KNUCKLE(new Symbol(1, 8, 15, 1, 1, 1, 15, 20), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_UP_THUMB_SIDE(new Symbol(1, 8, 16, 1, 1, 1, 22, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_THUMB_HOOK(new Symbol(1, 8, 17, 1, 1, 1, 15, 23), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_THUMB_BABY(new Symbol(1, 8, 18, 1, 1, 1, 27, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_BABY(new Symbol(1, 8, 19, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY(new Symbol(1, 9, 1, 1, 1, 1, 20, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_ON_CIRCLE(new Symbol(1, 9, 2, 1, 1, 1, 22, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_ON_CURLICUE(new Symbol(1, 9, 3, 1, 1, 1, 21, 29),
	MIDDLE_RING_BABY_ON_CUP(new Symbol(1, 9, 4, 1, 1, 1, 16, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_ON_HINGE(new Symbol(1, 9, 5, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_ON_ANGLE_OUT(new Symbol(1, 9, 6, 1, 1, 1, 23, 28),
	MIDDLE_RING_BABY_ON_ANGLE_IN(new Symbol(1, 9, 7, 1, 1, 1, 23, 28),
	MIDDLE_RING_BABY_ON_ANGLE(new Symbol(1, 9, 8, 1, 1, 1, 23, 28), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_BENT(new Symbol(1, 9, 9, 1, 1, 1, 24, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	MIDDLE_RING_BABY_UNIT_ON_CLAW(new Symbol(1, 9, 10, 1, 1, 1, 14, 29),
	MIDDLE_RING_BABY_UNIT_ON_CLAW_SIDE(new Symbol(1, 9, 11, 1, 1, 1, 19, 29),
	MIDDLE_RING_BABY_UNIT_ON_HOOK_OUT(new Symbol(1, 9, 12, 1, 1, 1, 17, 29),
	MIDDLE_RING_BABY_UNIT_ON_HOOK_IN(new Symbol(1, 9, 13, 1, 1, 1, 16, 29),
	MIDDLE_RING_BABY_UNIT_ON_HOOK(new Symbol(1, 9, 14, 1, 1, 1, 16, 29),
	INDEX_HINGE(new Symbol(1, 9, 15, 1, 1, 1, 28, 29), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_SIDE(new Symbol(1, 9, 16, 1, 1, 1, 24, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_SIDE_ON_HINGE(new Symbol(1, 9, 17, 1, 1, 1, 28, 30), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_SIDE_THUMB_DIAGONAL(new Symbol(1, 9, 18, 1, 1, 1, 22, 30),
	INDEX_THUMB_SIDE_THUMB_UNIT(new Symbol(1, 9, 19, 1, 1, 1, 18, 30),
	INDEX_THUMB_SIDE_THUMB_BENT(new Symbol(1, 9, 20, 1, 1, 1, 23, 30),
	INDEX_THUMB_SIDE_INDEX_BENT(new Symbol(1, 9, 21, 1, 1, 1, 24, 26),
	INDEX_THUMB_SIDE_BOTH_BENT(new Symbol(1, 9, 22, 1, 1, 1, 22, 26),
	INDEX_THUMB_SIDE_INDEX_HINGE(new Symbol(1, 9, 23, 1, 1, 1, 24, 26),
	INDEX_THUMB_FORWARD_INDEX_STRAIGHT(new Symbol(1, 9, 24, 1, 1, 1, 15, 30),
	INDEX_THUMB_FORWARD_INDEX_BENT(new Symbol(1, 9, 25, 1, 1, 1, 15, 26),
	INDEX_THUMB_HOOK(new Symbol(1, 9, 26, 1, 1, 1, 23, 24), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CURLICUE(new Symbol(1, 9, 27, 1, 1, 1, 26, 21), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CURVE_THUMB_INSIDE(new Symbol(1, 9, 28, 1, 1, 1, 25, 21),
	INDEX_THUMB_CURVE_THUMB_INSIDE_ON_CLAW(new Symbol(1, 9, 29, 1, 1, 1, 18, 26),
	INDEX_THUMB_CURVE_THUMB_UNDER(new Symbol(1, 9, 30, 1, 1, 1, 23, 21),
	INDEX_THUMB_CIRCLE(new Symbol(1, 9, 31, 1, 1, 1, 24, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CUP(new Symbol(1, 9, 32, 1, 1, 1, 23, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_CUP_OPEN(new Symbol(1, 9, 33, 1, 1, 1, 26, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_HINGE_OPEN(new Symbol(1, 9, 34, 1, 1, 1, 25, 22), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_HINGE_LARGE(new Symbol(1, 9, 35, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_HINGE(new Symbol(1, 9, 36, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_HINGE_SMALL(new Symbol(1, 9, 37, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_ANGLE_OUT(new Symbol(1, 9, 38, 1, 1, 1, 30, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_ANGLE_IN(new Symbol(1, 9, 39, 1, 1, 1, 30, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	INDEX_THUMB_ANGLE(new Symbol(1, 9, 40, 1, 1, 1, 29, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB(new Symbol(1, 10, 1, 1, 1, 1, 24, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_HEEL(new Symbol(1, 10, 2, 1, 2, 1, 24, 10), Arrays.asList(new Integer[] { 2 })), //
	THUMB_SIDE_DIAGONAL(new Symbol(1, 10, 3, 1, 1, 1, 20, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_SIDE_UNIT(new Symbol(1, 10, 4, 1, 1, 1, 18, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_SIDE_BENT(new Symbol(1, 10, 5, 1, 1, 1, 23, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_FORWARD(new Symbol(1, 10, 6, 1, 1, 1, 15, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_BETWEEN_INDEX_MIDDLE(new Symbol(1, 10, 7, 1, 1, 1, 15, 19),
	THUMB_BETWEEN_MIDDLE_RING(new Symbol(1, 10, 8, 1, 1, 1, 15, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_BETWEEN_RING_BABY(new Symbol(1, 10, 9, 1, 1, 1, 15, 19), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_UNDER_TWO_FINGERS(new Symbol(1, 10, 10, 1, 1, 1, 15, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_OVER_TWO_FINGERS(new Symbol(1, 10, 11, 1, 1, 1, 15, 18), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_UNDER_THREE_FINGERS(new Symbol(1, 10, 12, 1, 1, 1, 15, 18),
	THUMB_UNDER_FOUR_FINGERS(new Symbol(1, 10, 13, 1, 1, 1, 15, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	THUMB_OVER_FOUR_RAISED_KNUCKLES(new Symbol(1, 10, 14, 1, 1, 1, 18, 20),
	FIST(new Symbol(1, 10, 15, 1, 1, 1, 15, 15), Arrays.asList(new Integer[] { 1, 2, 3, 4, 5, 6 })), //
	FIST_HEEL(new Symbol(1, 10, 16, 1, 2, 1, 15, 11), Arrays.asList(new Integer[] { 2 })), //
